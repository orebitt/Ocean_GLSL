{"mappings":"AA0DA,IAqGMA,IAAkB,SAAUC,EAAQC,GAGtC,IAFA,IAAIC,EAAQ,CAAC,QAAS,qBAAsB,YAAa,aACrDC,EAAU,KACLC,EAAK,EAAGA,EAAKF,EAAMG,SAAUD,EAAI,CACxC,IACED,EAAUH,EAAOM,WAAWJ,EAAME,GAAKH,EACzC,CAAE,MAAOM,GAAI,CACb,GAAIJ,EACF,KAEJ,CACA,OAAOA,CACT,GCrKoB,WAKpB,IAUIK,EAAsB,CAGxBC,OAAQ,CAAE,GAAG,GACbC,QAAS,CAAE,GAAG,GACdC,aAAc,CAAE,GAAG,GAInBC,WAAY,CAAE,GAAG,GACjBC,aAAc,CAAE,GAAG,EAAM,GAAG,GAI5BC,aAAc,CAAE,GAAG,GACnBC,mBAAoB,CAAE,GAAG,GACzBC,oBAAqB,CAAE,GAAG,GAI1BC,gBAAiB,CAAE,GAAG,GACtBC,oBAAqB,CAAE,GAAG,GAI1BC,YAAa,CAAE,GAAG,GAClBC,cAAe,CAAE,GAAG,GACpBC,gBAAiB,CAAE,GAAG,EAAM,GAAG,GAC/BC,cAAe,CAAE,GAAG,EAAM,GAAG,GAC7BC,cAAe,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GACtCC,WAAY,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,EAAM,GAAG,GAC5CC,cAAe,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GACtCC,eAAgB,CAAE,GAAG,EAAM,GAAG,GAC9BC,kBAAmB,CAAE,GAAG,GACxBC,eAAgB,CAAE,GAAG,GAIrBC,WAAY,CAAE,GAAG,GACjBC,WAAY,CAAE,GAAG,EAAM,GAAG,GAC1BC,cAAe,CAAE,GAAG,GACpBC,mBAAoB,CAAE,GAAG,EAAM,GAAG,GAIlCC,YAAa,CAAE,GAAG,EAAM,GAAG,GAC3BC,WAAY,CAAE,GAAG,EAAM,GAAG,GAC1BC,iBAAkB,CAAE,GAAG,GACvBC,gBAAiB,CAAE,GAAG,GACtBC,uBAAwB,CAAE,GAAG,GAC7BC,wBAAyB,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GAChDC,qBAAsB,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GAC7CC,kCAAmC,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GAC1DC,yBAA0B,CAAE,GAAG,EAAM,GAAG,GACxCC,oBAAqB,CAAE,GAAG,EAAM,GAAG,GAInCC,MAAO,CAAE,GAAG,GACZC,UAAW,CAAE,GAAG,GAChBC,UAAW,CAAE,GAAG,EAAM,GAAG,GACzBC,kBAAmB,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,EAAM,GAAG,GACnDC,cAAe,CAAE,GAAG,GACpBC,sBAAuB,CAAE,GAAG,EAAM,GAAG,GACrCC,YAAa,CAAE,GAAG,GAClBC,oBAAqB,CAAE,GAAG,EAAM,GAAG,GACnCC,oBAAqB,CAAE,GAAG,GAC1BC,UAAW,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,GAClCC,kBAAmB,CAAE,GAAG,EAAM,GAAG,EAAM,GAAG,EAAM,GAAG,GAInDC,SAAU,CAAE,GAAG,GACfC,UAAW,CAAE,GAAG,IAOdC,EAAU,KAQd,SAASC,EAAKC,GACZ,GAAe,MAAXF,EAEF,IAAK,IAAIG,KADTH,EAAU,CAAC,EACcE,EACS,iBAArBA,EAAIC,KACbH,EAAQE,EAAIC,IAAiBA,EAIrC,CAKA,SAASC,IACP,GAAe,MAAXJ,EACF,KAAM,sCAEV,CAqBA,SAASK,EAAeC,GACtBF,IACA,IAAIG,EAAOP,EAAQM,GACnB,YAAgBE,IAATD,EACHA,EACA,0BAA4BD,EAAMG,SAAS,IAAM,GACvD,CAUA,SAASC,EAAsBC,EAAcC,EAAeN,GAC1D,IAAIO,EAAW7D,EAAoB2D,GACnC,YAAiBH,IAAbK,GACEA,EAASD,GACJP,EAAeC,GAGnBA,EAAMG,UACf,CA+EA,SAASK,EAAoBZ,GAC3B,IAAIa,EAAab,EAAI/C,aAAa+C,EAAIc,oBAClCC,EAAMf,EAAIgB,eACdhB,EAAI7B,WAAW6B,EAAIiB,aAAcF,GACjC,IAAK,IAAIrE,EAAK,EAAGA,EAAKmE,IAAcnE,EAClCsD,EAAIkB,yBAAyBxE,GAC7BsD,EAAIxC,oBAAoBd,EAAI,EAAGsD,EAAImB,OAAO,EAAO,EAAG,GACpDnB,EAAIoB,eAAe1E,EAAI,GAEzBsD,EAAIqB,aAAaN,GAEjB,IAAIO,EAAkBtB,EAAI/C,aAAa+C,EAAIuB,yBAC3C,IAAS7E,EAAK,EAAGA,EAAK4E,IAAmB5E,EACvCsD,EAAItC,cAAcsC,EAAIwB,SAAW9E,GACjCsD,EAAIvC,YAAYuC,EAAIyB,iBAAkB,MACtCzB,EAAIvC,YAAYuC,EAAI0B,WAAY,MAmDlC,IAhDA1B,EAAItC,cAAcsC,EAAIwB,UACtBxB,EAAI2B,WAAW,MACf3B,EAAI7B,WAAW6B,EAAIiB,aAAc,MACjCjB,EAAI7B,WAAW6B,EAAI4B,qBAAsB,MACzC5B,EAAItB,gBAAgBsB,EAAI6B,YAAa,MACrC7B,EAAIvB,iBAAiBuB,EAAI8B,aAAc,MACvC9B,EAAIhD,QAAQgD,EAAI+B,OAChB/B,EAAIhD,QAAQgD,EAAIgC,WAChBhC,EAAIhD,QAAQgD,EAAIiC,YAChBjC,EAAIhD,QAAQgD,EAAIkC,QAChBlC,EAAIhD,QAAQgD,EAAImC,cAChBnC,EAAIoC,WAAW,EAAG,EAAG,EAAG,GACxBpC,EAAIX,cAAcW,EAAIqC,UACtBrC,EAAIb,UAAUa,EAAIsC,IAAKtC,EAAIuC,MAC3BvC,EAAIwC,WAAW,EAAG,EAAG,EAAG,GACxBxC,EAAIyC,WAAW,GACfzC,EAAI0C,cAAa,GACjB1C,EAAI2C,WAAU,GAAM,GAAM,GAAM,GAChC3C,EAAIJ,SAASI,EAAI4C,MACjB5C,EAAId,UAAUc,EAAI6C,MAClB7C,EAAI8C,WAAU,GACd9C,EAAI+C,WAAW,EAAG,GAClB/C,EAAIH,UAAUG,EAAIgD,KAClBhD,EAAIiD,KAAKjD,EAAIkD,qBAAsBlD,EAAImD,WACvCnD,EAAIoD,UAAU,GACdpD,EAAIzB,YAAYyB,EAAIqD,eAAgB,GACpCrD,EAAIzB,YAAYyB,EAAIsD,iBAAkB,GACtCtD,EAAIzB,YAAYyB,EAAIuD,qBAAqB,GACzCvD,EAAIzB,YAAYyB,EAAIwD,gCAAgC,GAEhDxD,EAAIyD,oCACNzD,EAAIzB,YACFyB,EAAIyD,mCACJzD,EAAI0D,uBAGR1D,EAAI2D,cAAc,EAAG,GACrB3D,EAAI4D,eAAe,GAAG,GACtB5D,EAAI6D,QAAQ,EAAG,EAAG7D,EAAI1D,OAAOwH,MAAO9D,EAAI1D,OAAOyH,QAC/C/D,EAAIT,YAAYS,EAAIgE,OAAQ,EAAG,YAC/BhE,EAAIiE,YAAY,YAChBjE,EAAIN,UAAUM,EAAIkE,KAAMlE,EAAIkE,KAAMlE,EAAIkE,MACtClE,EAAImE,SAAS,EAAG,EAAGnE,EAAI1D,OAAO8H,YAAapE,EAAI1D,OAAO+H,cACtDrE,EAAIf,MACFe,EAAIsE,iBAAmBtE,EAAIuE,iBAAmBvE,EAAIwE,oBAI7CxE,EAAIyE,aACb,CAoXF,CA5qBsB,GCyBtB,SAASC,EAAcC,EAAIC,EAASC,GAElC,IAAIC,EAAeC,EAAWJ,EAAIA,EAAGK,cAAeJ,GAChDK,EAAiBF,EAAWJ,EAAIA,EAAGO,gBAAiBL,GACxD,IAAKC,IAAiBG,EACpB,OAAO,KAIT,IAAIE,EAAUR,EAAGS,gBACjB,IAAKD,EACH,OAAO,KAYT,GARAR,EAAGU,aAAaF,EAASL,GACzBH,EAAGU,aAAaF,EAASF,GAGzBN,EAAGW,YAAYH,IAGFR,EAAGrH,oBAAoB6H,EAASR,EAAGY,aACnC,CACX,IAAIC,EAAQb,EAAGc,kBAAkBN,GAKjC,OAJAO,QAAQC,IAAI,2BAA6BH,GACzCb,EAAGiB,cAAcT,GACjBR,EAAGkB,aAAaZ,GAChBN,EAAGkB,aAAaf,GACT,IACT,CACA,OAAOK,CACT,CASA,SAASJ,EAAWJ,EAAImB,EAAMC,GAE5B,IAAIC,EAASrB,EAAGvH,aAAa0I,GAC7B,GAAc,MAAVE,EAEF,OADAN,QAAQC,IAAI,2BACL,KAWT,GAPAhB,EAAGsB,aAAaD,EAAQD,GAGxBpB,EAAGuB,cAAcF,IAGFrB,EAAGtH,mBAAmB2I,EAAQrB,EAAGwB,gBACjC,CACb,IAAIX,EAAQb,EAAGyB,iBAAiBJ,GAGhC,OAFAN,QAAQC,IAAI,6BAA+BH,GAC3Cb,EAAGkB,aAAaG,GACT,IACT,CAEA,OAAOA,CACT,CCtFA,MAAMK,EACJC,YAAYC,GACV,IAAIC,EAAI,IAAIC,aAAa,GACrBF,GAA8B,iBAAZA,IACpBC,EAAE,GAAKD,EAAQ,GACfC,EAAE,GAAKD,EAAQ,GACfC,EAAE,GAAKD,EAAQ,IAEjBG,KAAKC,SAAWH,CAClB,CAOAI,IAAIC,GACF,IAAIC,EAAGC,EAAGC,EAKV,IAHAD,EAAIF,EAAIF,aACRK,EAAIN,KAAKC,UAET,CAIA,IAAKG,EAAI,EAAGA,EAAI,IAAKA,EACnBE,EAAEF,GAAKC,EAAED,GAGX,OAAOJ,IAPL,CAQJ,CAMAO,IAAIC,GACF,IAAK,IAAIJ,EAAI,EAAGA,EAAI,EAAGA,IACrBJ,KAAKC,SAASG,IAAMI,EAAMP,SAASG,GAIrC,OAAOJ,IACT,CAMAS,IAAID,GACF,IAAK,IAAIJ,EAAI,EAAGA,EAAI,EAAGA,IACrBJ,KAAKC,SAASG,IAAMI,EAAMP,SAASG,GAIrC,OAAOJ,IACT,CAMAU,IAAIC,GACF,IAAK,IAAIP,EAAI,EAAGA,EAAI,EAAGA,IACrBJ,KAAKC,SAASG,IAAMO,EAItB,OAAOX,IACT,CAMAY,IAAID,GACF,IAAK,IAAIP,EAAI,EAAGA,EAAI,EAAGA,IACrBJ,KAAKC,SAASG,IAAMO,EAItB,OAAOX,IACT,CAMAa,WAAWC,EAAQC,GACjB,IAAIT,EAAI,EAER,IAAK,IAAIF,EAAI,EAAGA,EAAI,EAAGA,IACrBE,GAAKQ,EAAOb,SAASG,GAAKW,EAAOd,SAASG,GAI5C,OAAOE,CACT,CAMAO,aAAaC,EAAQC,GACnB,IAAIC,EAAIF,EAAOb,SACXgB,EAAIF,EAAOd,SAEXG,EAAIY,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAC3BC,GAAI,GAAMF,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,IACjCE,EAAIH,EAAE,GAAKC,EAAE,GAAKD,EAAE,GAAKC,EAAE,GAK/B,OAHS,IAAItB,EAAQ,CAACS,EAAGc,EAAGC,GAI9B,CAMAC,YAEE,IAAIC,EAAI,EAER,IAAK,IAAIjB,EAAI,EAAGA,EAAI,EAAGA,IACrBiB,GAAKrB,KAAKC,SAASG,GAAKJ,KAAKC,SAASG,GAMxC,OAHAiB,EAAIC,KAAKC,KAAKF,GAGPA,CACT,CAMAG,YAIE,OAHAxB,KAAKU,IAAIV,KAAKoB,aAGPpB,IACT,EAGF,MAAMyB,EAMJ7B,YAAYC,GACV,IAAIC,EAAI,IAAIC,aAAa,GACrBF,GAA8B,iBAAZA,IACpBC,EAAE,GAAKD,EAAQ,GACfC,EAAE,GAAKD,EAAQ,GACfC,EAAE,GAAKD,EAAQ,GACfC,EAAE,GAAKD,EAAQ,IAEjBG,KAAKC,SAAWH,CAClB,EAGF,MAAM4B,EAOJ9B,YAAYC,GACV,IAAIO,EAAGC,EAAGC,EACV,GACET,GACmB,iBAAZA,GACPA,EAAQ8B,eAAe,YACvB,CAGA,IAFAtB,EAAIR,EAAQI,SACZK,EAAI,IAAIP,aAAa,IAChBK,EAAI,EAAGA,EAAI,KAAMA,EACpBE,EAAEF,GAAKC,EAAED,GAEXJ,KAAKC,SAAWK,CAClB,MACEN,KAAKC,SAAW,IAAIF,aAAa,CAC/B,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAGN,CAMA6B,cACE,IAAIzL,EAAI6J,KAAKC,SAiBb,OAhBA9J,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,EACD6J,IACT,CAOAE,IAAIC,GACF,IAAIC,EAAGC,EAAGC,EAKV,IAHAD,EAAIF,EAAIF,aACRK,EAAIN,KAAKC,UAET,CAIA,IAAKG,EAAI,EAAGA,EAAI,KAAMA,EACpBE,EAAEF,GAAKC,EAAED,GAGX,OAAOJ,IAPL,CAQJ,CAOA6B,SAASrB,GACP,IAAIJ,EAAGjK,EAAG6K,EAAGC,EAAGa,EAAKC,EAAKC,EAAKC,EAQ/B,GALA9L,EAAI6J,KAAKC,SACTe,EAAIhB,KAAKC,SAIL9J,KAHJ8K,EAAIT,EAAMP,UAKR,IADAgB,EAAI,IAAIlB,aAAa,IAChBK,EAAI,EAAGA,EAAI,KAAMA,EACpBa,EAAEb,GAAKjK,EAAEiK,GAIb,IAAKA,EAAI,EAAGA,EAAI,EAAGA,IACjB0B,EAAMd,EAAEZ,GACR2B,EAAMf,EAAEZ,EAAI,GACZ4B,EAAMhB,EAAEZ,EAAI,GACZ6B,EAAMjB,EAAEZ,EAAI,IACZjK,EAAEiK,GAAK0B,EAAMb,EAAE,GAAKc,EAAMd,EAAE,GAAKe,EAAMf,EAAE,GAAKgB,EAAMhB,EAAE,GACtD9K,EAAEiK,EAAI,GAAK0B,EAAMb,EAAE,GAAKc,EAAMd,EAAE,GAAKe,EAAMf,EAAE,GAAKgB,EAAMhB,EAAE,GAC1D9K,EAAEiK,EAAI,GAAK0B,EAAMb,EAAE,GAAKc,EAAMd,EAAE,GAAKe,EAAMf,EAAE,IAAMgB,EAAMhB,EAAE,IAC3D9K,EAAEiK,EAAI,IAAM0B,EAAMb,EAAE,IAAMc,EAAMd,EAAE,IAAMe,EAAMf,EAAE,IAAMgB,EAAMhB,EAAE,IAGhE,OAAOjB,IACT,CAEAkC,OAAO1B,GACL,OAAOR,KAAK6B,SAASrB,EACvB,CAOA2B,gBAAgBC,GACd,IAAIjM,EAAI6J,KAAKC,SACToC,EAAID,EAAInC,SACRH,EAAI,IAAIH,EACR2C,EAASxC,EAAEG,SAMf,OAJAqC,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKA,EAAE,IACxDmM,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKA,EAAE,IACxDmM,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,IAAMA,EAAE,IAElD2J,CACT,CAOAyC,gBAAgBH,GACd,IAAIjM,EAAI6J,KAAKC,SACToC,EAAID,EAAInC,SACRH,EAAI,IAAI2B,EACRa,EAASxC,EAAEG,SAOf,OALAqC,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,IAC/DmM,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,IAC/DmM,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,IAAMkM,EAAE,GAAKlM,EAAE,IAChEmM,EAAO,GAAKD,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,GAAKkM,EAAE,GAAKlM,EAAE,IAAMkM,EAAE,GAAKlM,EAAE,IAEzD2J,CACT,CAMA0C,YACE,IAAIrM,EAAGsM,EAuBP,OAnBAA,GAFAtM,EAAI6J,KAAKC,UAEH,GACN9J,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKsM,EACPA,EAAItM,EAAE,GACNA,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKsM,EACPA,EAAItM,EAAE,GACNA,EAAE,GAAKA,EAAE,IACTA,EAAE,IAAMsM,EACRA,EAAItM,EAAE,GACNA,EAAE,GAAKA,EAAE,GACTA,EAAE,GAAKsM,EACPA,EAAItM,EAAE,GACNA,EAAE,GAAKA,EAAE,IACTA,EAAE,IAAMsM,EACRA,EAAItM,EAAE,IACNA,EAAE,IAAMA,EAAE,IACVA,EAAE,IAAMsM,EAEDzC,IACT,CAOA0C,aAAalC,GACX,IAAIJ,EAAGC,EAAGC,EAAGqC,EAAKC,EA2HlB,GAzHAvC,EAAIG,EAAMP,SACVK,EAAIN,KAAKC,UACT0C,EAAM,IAAI5C,aAAa,KAEnB,GACFM,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACnBsC,EAAI,IACDtC,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAClBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACnBsC,EAAI,GACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACnBsC,EAAI,KACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAEnBsC,EAAI,IACDtC,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAClBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACnBsC,EAAI,GACFtC,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACnBsC,EAAI,IACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACnBsC,EAAI,IACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,IAAMA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,IACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAEnBsC,EAAI,GACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACnBsC,EAAI,IACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACnBsC,EAAI,IACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACnBsC,EAAI,KACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GACjBA,EAAE,IAAMA,EAAE,GAAKA,EAAE,GAEnBsC,EAAI,IACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAClBsC,EAAI,GACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAClBsC,EAAI,KACDtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IACjBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAClBsC,EAAI,IACFtC,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAChBA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAGN,KADZuC,EAAMvC,EAAE,GAAKsC,EAAI,GAAKtC,EAAE,GAAKsC,EAAI,GAAKtC,EAAE,GAAKsC,EAAI,GAAKtC,EAAE,GAAKsC,EAAI,KAE/D,OAAO3C,KAIT,IADA4C,EAAM,EAAIA,EACLxC,EAAI,EAAGA,EAAI,GAAIA,IAClBE,EAAEF,GAAKuC,EAAIvC,GAAKwC,EAGlB,OAAO5C,IACT,CAMA6C,SACE,OAAO7C,KAAK0C,aAAa1C,KAC3B,CAYA8C,SAASC,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACvC,IAAIjN,EAAGkN,EAAIC,EAAIC,EAEf,GAAIR,IAASC,GAASC,IAAWC,GAAOC,IAASC,EAC/C,KAAM,eA6BR,OA1BAC,EAAK,GAAKL,EAAQD,GAClBO,EAAK,GAAKJ,EAAMD,GAChBM,EAAK,GAAKH,EAAMD,IAEhBhN,EAAI6J,KAAKC,UAEP,GAAK,EAAIoD,EACXlN,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EAAImN,EACXnN,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,KAAM,EAAKoN,EACbpN,EAAE,IAAM,EAERA,EAAE,MAAQ6M,EAAQD,GAAQM,EAC1BlN,EAAE,MAAQ+M,EAAMD,GAAUK,EAC1BnN,EAAE,MAAQiN,EAAMD,GAAQI,EACxBpN,EAAE,IAAM,EAED6J,IACT,CAYAwD,MAAMT,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACpC,OAAOpD,KAAKkC,QACV,IAAIR,GAAUoB,SAASC,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GAE3D,CAYAK,WAAWV,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACzC,IAAIjN,EAAGkN,EAAIC,EAAIC,EAEf,GAAIR,IAASC,GAASE,IAAQD,GAAUE,IAASC,EAC/C,KAAM,eAER,GAAID,GAAQ,EACV,KAAM,YAER,GAAIC,GAAO,EACT,KAAM,WA6BR,OA1BAC,EAAK,GAAKL,EAAQD,GAClBO,EAAK,GAAKJ,EAAMD,GAChBM,EAAK,GAAKH,EAAMD,IAEhBhN,EAAI6J,KAAKC,UAEP,GAAK,EAAIkD,EAAOE,EAClBlN,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EAAIgN,EAAOG,EAClBnN,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,IAAM6M,EAAQD,GAAQM,EACxBlN,EAAE,IAAM+M,EAAMD,GAAUK,EACxBnN,EAAE,MAAQiN,EAAMD,GAAQI,EACxBpN,EAAE,KAAM,EAERA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,KAAM,EAAKgN,EAAOC,EAAMG,EAC1BpN,EAAE,IAAM,EAED6J,IACT,CAYA0D,QAAQX,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GACtC,OAAOpD,KAAKkC,QACV,IAAIR,GAAU+B,WAAWV,EAAMC,EAAOC,EAAQC,EAAKC,EAAMC,GAE7D,CAUAO,eAAeC,EAAMC,EAAQV,EAAMC,GACjC,IAAIjN,EAAGoN,EAAIlD,EAAGyD,EAEd,GAAIX,IAASC,GAAkB,IAAXS,EAClB,KAAM,eAER,GAAIV,GAAQ,EACV,KAAM,YAER,GAAIC,GAAO,EACT,KAAM,WAKR,GAFAQ,EAAOtC,KAAMyC,GAAKH,EAAQ,IAAM,EAEtB,KADVvD,EAAIiB,KAAK0C,IAAIJ,IAEX,KAAM,eA4BR,OAzBAL,EAAK,GAAKH,EAAMD,GAChBW,EAAKxC,KAAK2C,IAAIL,GAAQvD,GAEtBlK,EAAI6J,KAAKC,UAEP,GAAK6D,EAAKD,EACZ1N,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK2N,EACP3N,EAAE,GAAK,EACPA,EAAE,GAAK,EAEPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,MAAQiN,EAAMD,GAAQI,EACxBpN,EAAE,KAAM,EAERA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,KAAM,EAAKgN,EAAOC,EAAMG,EAC1BpN,EAAE,IAAM,EAED6J,IACT,CAUAkE,YAAYN,EAAMC,EAAQV,EAAMC,GAC9B,OAAOpD,KAAKkC,QAAO,IAAIR,GAAUiC,eAAeC,EAAMC,EAAQV,EAAMC,GACtE,CASAe,SAASC,EAAGC,EAAGC,GACb,IAAInO,EAAI6J,KAAKC,SAiBb,OAhBA9J,EAAE,GAAKiO,EACPjO,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAKkO,EACPlO,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAMmO,EACRnO,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,EACD6J,IACT,CASAuE,MAAMH,EAAGC,EAAGC,GACV,IAAInO,EAAI6J,KAAKC,SAab,OAZA9J,EAAE,IAAMiO,EACRjO,EAAE,IAAMkO,EACRlO,EAAE,IAAMmO,EACRnO,EAAE,IAAMiO,EACRjO,EAAE,IAAMkO,EACRlO,EAAE,IAAMmO,EACRnO,EAAE,IAAMiO,EACRjO,EAAE,IAAMkO,EACRlO,EAAE,KAAOmO,EACTnO,EAAE,IAAMiO,EACRjO,EAAE,IAAMkO,EACRlO,EAAE,KAAOmO,EACFtE,IACT,CAUAwE,aAAaJ,EAAGC,EAAGC,GACjB,IAAInO,EAAI6J,KAAKC,SAiBb,OAhBA9J,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAMiO,EACRjO,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAMkO,EACRlO,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAMmO,EACRnO,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,EACD6J,IACT,CASAyE,UAAUL,EAAGC,EAAGC,GACd,IAAInO,EAAI6J,KAAKC,SAKb,OAJA9J,EAAE,KAAOA,EAAE,GAAKiO,EAAIjO,EAAE,GAAKkO,EAAIlO,EAAE,GAAKmO,EACtCnO,EAAE,KAAOA,EAAE,GAAKiO,EAAIjO,EAAE,GAAKkO,EAAIlO,EAAE,GAAKmO,EACtCnO,EAAE,KAAOA,EAAE,GAAKiO,EAAIjO,EAAE,GAAKkO,EAAIlO,EAAE,IAAMmO,EACvCnO,EAAE,KAAOA,EAAE,GAAKiO,EAAIjO,EAAE,GAAKkO,EAAIlO,EAAE,IAAMmO,EAChCtE,IACT,CAWA0E,UAAUC,EAAOP,EAAGC,EAAGC,GACrB,IAAInO,EAAGkK,EAAGuE,EAAGC,EAAKC,EAAMC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EA6GhD,OA3GAV,EAAQrD,KAAMyC,GAAKY,EAAS,IAC5BxO,EAAI6J,KAAKC,SAETI,EAAIiB,KAAK0C,IAAIW,GACbC,EAAItD,KAAK2C,IAAIU,GAET,IAAMP,GAAK,IAAMC,GAAK,IAAMC,GAE1BF,EAAI,IACN/D,GAAKA,GAEPlK,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAKyO,EACPzO,EAAE,IAAMkK,EACRlK,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAKkK,EACPlK,EAAE,IAAMyO,EACRzO,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,GACC,IAAMiO,GAAK,IAAMC,GAAK,IAAMC,GAEjCD,EAAI,IACNhE,GAAKA,GAEPlK,EAAE,GAAKyO,EACPzO,EAAE,GAAK,EACPA,EAAE,GAAKkK,EACPlK,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAMkK,EACRlK,EAAE,GAAK,EACPA,EAAE,IAAMyO,EACRzO,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,GACC,IAAMiO,GAAK,IAAMC,GAAK,IAAMC,GAEjCA,EAAI,IACNjE,GAAKA,GAEPlK,EAAE,GAAKyO,EACPzO,EAAE,IAAMkK,EACRlK,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAKkK,EACPlK,EAAE,GAAKyO,EACPzO,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,GAAK,EACPA,EAAE,GAAK,EACPA,EAAE,IAAM,EACRA,EAAE,IAAM,IAII,KADZ0O,EAAMvD,KAAKC,KAAK6C,EAAIA,EAAIC,EAAIA,EAAIC,EAAIA,MAGlCF,GADAU,EAAO,EAAID,EAEXR,GAAKS,EACLR,GAAKQ,GAEPC,EAAK,EAAIH,EACTI,EAAKZ,EAAIC,EACTY,EAAKZ,EAAIC,EACTY,EAAKZ,EAAIF,EACTe,EAAKf,EAAI/D,EACT+E,EAAKf,EAAIhE,EACTgF,EAAKf,EAAIjE,EAETlK,EAAE,GAAKiO,EAAIA,EAAIW,EAAKH,EACpBzO,EAAE,GAAK6O,EAAKD,EAAKM,EACjBlP,EAAE,GAAK+O,EAAKH,EAAKK,EACjBjP,EAAE,GAAK,EAEPA,EAAE,GAAK6O,EAAKD,EAAKM,EACjBlP,EAAE,GAAKkO,EAAIA,EAAIU,EAAKH,EACpBzO,EAAE,GAAK8O,EAAKF,EAAKI,EACjBhP,EAAE,GAAK,EAEPA,EAAE,GAAK+O,EAAKH,EAAKK,EACjBjP,EAAE,GAAK8O,EAAKF,EAAKI,EACjBhP,EAAE,IAAMmO,EAAIA,EAAIS,EAAKH,EACrBzO,EAAE,IAAM,EAERA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,GAGH6J,IACT,CAWAsF,OAAOX,EAAOP,EAAGC,EAAGC,GAClB,OAAOtE,KAAKkC,QAAO,IAAIR,GAAUgD,UAAUC,EAAOP,EAAGC,EAAGC,GAC1D,CASAiB,UAAUC,EAAMC,EAAMC,EAAMC,EAASC,EAASC,EAASC,EAAKC,EAAKC,GAC/D,IAAI7P,EAAG8P,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,EAAIC,EAAKC,EAAIC,EAAIC,EAmDjD,OAjDAV,EAAKN,EAAUH,EACfU,EAAKN,EAAUH,EACfU,EAAKN,EAAUH,EASfW,GAJAH,GAFAE,EAAM,EAAI9E,KAAKC,KAAK0E,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAMnCH,GAHVG,GAAMC,GAGeL,EACrBO,EAAKH,EAAKL,GANVG,GAAMG,GAMeJ,EACrBO,EAAKN,EAAKF,EAAMG,EAAKJ,EASrBW,GAJAH,GAFAE,EAAM,EAAIlF,KAAKC,KAAK8E,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,IAMnCJ,GAHVI,GAAMC,GAGcN,EACpBQ,EAAKH,EAAKN,GANVI,GAAMG,GAMcL,EACpBQ,EAAKN,EAAKH,EAAKI,EAAKL,GAGpB9P,EAAI6J,KAAKC,UACP,GAAKoG,EACPlQ,EAAE,GAAKsQ,EACPtQ,EAAE,IAAM8P,EACR9P,EAAE,GAAK,EAEPA,EAAE,GAAKmQ,EACPnQ,EAAE,GAAKuQ,EACPvQ,EAAE,IAAM+P,EACR/P,EAAE,GAAK,EAEPA,EAAE,GAAKoQ,EACPpQ,EAAE,GAAKwQ,EACPxQ,EAAE,KAAOgQ,EACThQ,EAAE,IAAM,EAERA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EACRA,EAAE,IAAM,EAGD6J,KAAKyE,WAAWe,GAAOC,GAAOC,EACvC,CASAkB,OAAOpB,EAAMC,EAAMC,EAAMC,EAASC,EAASC,EAASC,EAAKC,EAAKC,GAC5D,OAAOhG,KAAKkC,QACV,IAAIR,GAAU6D,UACZC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGN,CAQAa,WAAWC,EAAOC,GAChB,IAAIC,EAAM,IAAItF,EACVvL,EAAI6Q,EAAI/G,SAERgH,EACFH,EAAM,GAAKC,EAAM,GACjBD,EAAM,GAAKC,EAAM,GACjBD,EAAM,GAAKC,EAAM,GACjBD,EAAM,GAAKC,EAAM,GAsBnB,OApBA5Q,EAAE,GAAK8Q,EAAMF,EAAM,GAAKD,EAAM,GAC9B3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GAEzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,GAAK8Q,EAAMF,EAAM,GAAKD,EAAM,GAC9B3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GAEzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,IAAM4Q,EAAM,GAAKD,EAAM,GACzB3Q,EAAE,IAAM8Q,EAAMF,EAAM,GAAKD,EAAM,GAC/B3Q,EAAE,KAAO4Q,EAAM,GAAKD,EAAM,GAE1B3Q,EAAE,KAAO4Q,EAAM,GAAKD,EAAM,GAC1B3Q,EAAE,KAAO4Q,EAAM,GAAKD,EAAM,GAC1B3Q,EAAE,KAAO4Q,EAAM,GAAKD,EAAM,GAC1B3Q,EAAE,IAAM8Q,EAAMF,EAAM,GAAKD,EAAM,GAExB9G,KAAKkC,OAAO8E,EACrB,CASAE,wBACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAI3G,EAAIsG,EAASH,EAAQI,EAASH,EAAQI,EAASH,EACnD,OAAOrH,KAAK6G,WACV,CAACM,EAAOC,EAAOC,GAAQrG,GACvB,CAACyG,EAAQC,EAAQC,EAAQ,GAE7B,ECzkCF,MAAMC,EAAe,qdAqBfC,EAAiB,oKCrBvB,MCGMC,EAAQ,ICCC,MACblI,YAAYmI,EAAgB,EAAGC,EAAiB,GAE9ChI,KAAKiI,aAAe,KACpBjI,KAAKkI,YAAc,KACnBlI,KAAKmI,SAAW,KAChBnI,KAAKoI,aAAe,KAGpBpI,KAAK5B,aAAewJ,EACpB5H,KAAKzB,eAAiBsJ,EACtB7H,KAAKvB,QAAU,KAGfuB,KAAKqI,SAAW,KAChBrI,KAAKsI,QAAU,KACftI,KAAKuI,IAAM,KACXvI,KAAKwI,QAAU,KAGfxI,KAAKyI,SAAW,IAAI9I,EAAQ,CAAC,EAAG,EAAG,IACnCK,KAAK0I,SAAW,IAAI/I,EAAQ,CAAC,EAAG,EAAG,IACnCK,KAAKuE,MAAQ,IAAI5E,EAAQ,CAAC,EAAG,EAAG,IAChCK,KAAK2I,YAAc,IAAIjH,EACvB1B,KAAK4I,aAAe,IAAIlH,EAExB1B,KAAK6I,cAAcd,EAAeC,EACpC,CAEAc,WAAWC,EAAYC,GACrBhJ,KAAK5B,aAAe2K,EACpB/I,KAAKzB,eAAiByK,EAEtBhJ,KAAKvB,QAAU,IACjB,CAEAoK,cAAcd,EAAeC,GAC3B,MAAMiB,EAAY,EAAMlB,EAClBmB,EAAa,EAAMnB,EAEnBM,EAAW,GACXC,EAAU,GACVC,EAAM,GACNC,EAAU,GAMhB,IAAK,IAAIpI,EAAI,EAAGA,EAAI4H,EAAiB,EAAG5H,IAAK,CAC3C,MAAMiE,EAAIjE,EAAI8I,EAAa,GAE3B,IAAK,IAAIhI,EAAI,EAAGA,EAAI6G,EAAgB,EAAG7G,IAAK,CAC1C,IAAIkD,EAAIlD,EAAI+H,EAAY,GAExBZ,EAASc,KAAK/E,GAAIC,EAAG,GAGrBmE,EAAQW,KAAK,EAAG,EAAG,GAEnBZ,EAAIY,KAAKjI,EAAI6G,GACbQ,EAAIY,KAAK,EAAI/I,EAAI4H,EACnB,CAEA,IAAK,IAAI5H,EAAI,EAAGA,EAAI4H,EAAgB5H,IAClC,IAAK,IAAIc,EAAI,EAAGA,EAAI6G,EAAe7G,IAAK,CACtC,IAAIF,EAAIE,GAAK6G,EAAgB,GAAK3H,EAC9Ba,EAAIC,GAAK6G,EAAgB,IAAM3H,EAAI,GACnCwE,EAAI1D,EAAI,GAAK6G,EAAgB,IAAM3H,EAAI,GACvCE,EAAIY,EAAI,GAAK6G,EAAgB,GAAK3H,EAItCkI,EAAQa,KAAKnI,EAAGC,EAAGX,GACnBgI,EAAQa,KAAKlI,EAAG2D,EAAGtE,EACrB,CAGFN,KAAKqI,SAAW,IAAItI,aAAasI,GACjCrI,KAAKsI,QAAU,IAAIc,YAAYd,GAC/BtI,KAAKuI,IAAM,IAAIxI,aAAawI,GAC5BvI,KAAKwI,QAAU,IAAIzI,aAAayI,EAClC,CACF,CAEAa,kBACE,IAAKjF,EAAGC,EAAGC,GAAKtE,KAAKyI,SAASxI,UACzBqJ,EAAIC,EAAIC,GAAMxJ,KAAK0I,SAASzI,UAC5BoG,EAAIC,EAAIC,GAAMvG,KAAKuE,MAAMtE,SAE9BD,KAAK2I,YACFnE,aAAaJ,EAAGC,EAAGC,GACnBgB,OAAOgE,EAAI,EAAG,EAAG,GACjBhE,OAAOiE,EAAI,EAAG,EAAG,GACjBjE,OAAOkE,EAAI,EAAG,EAAG,GACjBjF,MAAM8B,EAAIC,EAAIC,GAEjBvG,KAAK4I,aAAa1I,IAAIF,KAAK2I,aAAa9F,SAASL,WACnD,CAEAiH,OAAOxL,EAAIyL,GAEY,OAAjB1J,KAAKvB,UACPuB,KAAKvB,QAAUT,EAAcC,EAAI+B,KAAK5B,aAAc4B,KAAKzB,gBAEpDyB,KAAKvB,SAASO,QAAQF,MAAM,6BAInCb,EAAGhD,WAAW+E,KAAKvB,SAEO,OAAtBuB,KAAKiI,eAAuBjI,KAAKiI,aAAehK,EAAG3D,gBAC9B,OAArB0F,KAAKkI,cAAsBlI,KAAKkI,YAAcjK,EAAG3D,gBAC/B,OAAlB0F,KAAKmI,WAAmBnI,KAAKmI,SAAWlK,EAAG3D,gBACrB,OAAtB0F,KAAKoI,eAAuBpI,KAAKoI,aAAenK,EAAG3D,gBAEvD0F,KAAKqJ,kBACLK,EAAOC,0BAEP,MAAMC,EAAQ3L,EAAG4L,mBAAmB7J,KAAKvB,QAAS,SAC5CgK,EAAWxK,EAAG6L,kBAAkB9J,KAAKvB,QAAS,YAC9CsL,EAAK9L,EAAG6L,kBAAkB9J,KAAKvB,QAAS,MACxCuL,EAAS/L,EAAG6L,kBAAkB9J,KAAKvB,QAAS,UAC5CkK,EAAc1K,EAAG4L,mBAAmB7J,KAAKvB,QAAS,eAClDmK,EAAe3K,EAAG4L,mBAAmB7J,KAAKvB,QAAS,gBACnDwL,EAAahM,EAAG4L,mBAAmB7J,KAAKvB,QAAS,cACjDyL,EAAmBjM,EAAG4L,mBAC1B7J,KAAKvB,QACL,oBAGFR,EAAGkM,UAAUP,EAAOQ,YAAYC,MAAQ,KACxCpM,EAAGqM,iBAAiB3B,GAAa,EAAO3I,KAAK2I,YAAY1I,UACzDhC,EAAGqM,iBAAiB1B,GAAc,EAAO5I,KAAK4I,aAAa3I,UAC3DhC,EAAGqM,iBAAiBL,GAAY,EAAOP,EAAOO,WAAWhK,UACzDhC,EAAGqM,iBACDJ,GACA,EACAR,EAAOQ,iBAAiBjK,UAG1BhC,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKiI,cACpChK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKqI,SAAUpK,EAAGsM,cACjDtM,EAAGnH,oBAAoB2R,EAAU,EAAGxK,EAAGxD,OAAO,EAAO,EAAG,GACxDwD,EAAGuM,wBAAwB/B,GAE3BxK,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKmI,UACpClK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKuI,IAAKtK,EAAGsM,cAC5CtM,EAAGnH,oBAAoBiT,EAAI,EAAG9L,EAAGxD,OAAO,EAAO,EAAG,GAClDwD,EAAGuM,wBAAwBT,GAE3B9L,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKoI,cACpCnK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKwI,QAASvK,EAAGsM,cAChDtM,EAAGnH,oBAAoBkT,EAAQ,EAAG/L,EAAGxD,OAAO,EAAO,EAAG,GACtDwD,EAAGuM,wBAAwBR,GAE3B/L,EAAGxG,WAAWwG,EAAG/C,qBAAsB8E,KAAKkI,aAC5CjK,EAAGvG,WAAWuG,EAAG/C,qBAAsB8E,KAAKsI,QAASrK,EAAGsM,cAExDtM,EAAGxH,aAAawH,EAAGwM,UAAWzK,KAAKsI,QAAQrS,OAAQgI,EAAGyM,eAAgB,EACxE,GDjKsB,GAAI,IAC5B5C,EAAMvD,MAAM3D,IAAI,KAChBkH,EAAMY,SAASzI,SAAS,IAAK,GAC7B6H,EAAMgB,WDNe,ksIA4IE,0U,ICpIvB6B,EAAe7C,EERf,MCGM8C,EAAM,ICCG,MACbhL,YAAYiL,EAAS,GAAK9C,EAAgB,EAAGC,EAAiB,GAE5DhI,KAAKiI,aAAe,KACpBjI,KAAKkI,YAAc,KACnBlI,KAAKmI,SAAW,KAChBnI,KAAKoI,aAAe,KAGpBpI,KAAK5B,aAAewJ,EACpB5H,KAAKzB,eAAiBsJ,EACtB7H,KAAKvB,QAAU,KAGfuB,KAAKqI,SAAW,KAChBrI,KAAKsI,QAAU,KACftI,KAAKuI,IAAM,KACXvI,KAAKwI,QAAU,KAGfxI,KAAKyI,SAAW,IAAI9I,EAAQ,CAAC,EAAG,EAAG,IACnCK,KAAK0I,SAAW,IAAI/I,EAAQ,CAAC,EAAG,EAAG,IACnCK,KAAKuE,MAAQ,IAAI5E,EAAQ,CAAC,EAAG,EAAG,IAChCK,KAAK2I,YAAc,IAAIjH,EACvB1B,KAAK4I,aAAe,IAAIlH,EAExBqG,EAAgBzG,KAAKwJ,IAAI,EAAGxJ,KAAKyJ,MAAMhD,IACvCC,EAAiB1G,KAAKwJ,IAAI,EAAGxJ,KAAKyJ,MAAM/C,IAExChI,KAAKgL,eAAeH,EAAQ9C,EAAeC,EAC7C,CAEAc,WAAWC,EAAYC,GACrBhJ,KAAK5B,aAAe2K,EACpB/I,KAAKzB,eAAiByK,EAEtBhJ,KAAKvB,QAAU,IACjB,CAEAuM,eAAeH,EAAQ9C,EAAeC,GACpC,IAAIiD,EAAQ,EACZ,MAAMC,EAAO,GAEPC,EAAS,IAAIxL,EACbqK,EAAS,IAAIrK,EAIb2I,EAAU,GACVD,EAAW,GACXG,EAAU,GACVD,EAAM,GAEZ,IAAK,IAAIrH,EAAI,EAAGA,GAAK8G,EAAgB9G,IAAK,CACxC,MAAMkK,EAAM,GAENtL,EAAIoB,EAAI8G,EAEd,IAAIqD,EAAU,EAEJ,IAANnK,EACFmK,EAAU,GAAMtD,EACP7G,IAAM8G,IACfqD,GAAU,GAAOtD,GAGnB,IAAK,IAAI3H,EAAI,EAAGA,GAAK2H,EAAe3H,IAAK,CACvC,MAAMkL,EAAIlL,EAAI2H,EAEdoD,EAAOlL,SAAS,IACb4K,EAASvJ,KAAK2C,IAAIqH,EAAIhK,KAAKyC,GAAK,GAAKzC,KAAK0C,IAAIlE,EAAIwB,KAAKyC,IAE1DoH,EAAOlL,SAAS,GAAK4K,EAASvJ,KAAK2C,IAAInE,EAAIwB,KAAKyC,IAEhDoH,EAAOlL,SAAS,GACd4K,EAASvJ,KAAK0C,IAAIsH,EAAIhK,KAAKyC,GAAK,GAAKzC,KAAK0C,IAAIlE,EAAIwB,KAAKyC,IAEzDsE,EAASc,QAAQgC,EAAOlL,UACxB+J,EAAO9J,IAAIiL,GAAQ3J,YAEnBgH,EAAQW,QAAQa,EAAO/J,UAEvBsI,EAAIY,KAAKmC,EAAID,EAAS,EAAIvL,GAE1BsL,EAAIjC,KAAK8B,IACX,CAEAC,EAAK/B,KAAKiC,EACZ,CAEA,IAAK,IAAIlK,EAAI,EAAGA,EAAI8G,EAAgB9G,IAClC,IAAK,IAAId,EAAI,EAAGA,EAAI2H,EAAe3H,IAAK,CACtC,MAAMY,EAAIkK,EAAKhK,GAAGd,EAAI,GAChBa,EAAIiK,EAAKhK,GAAGd,GACZwE,EAAIsG,EAAKhK,EAAI,GAAGd,GAChBE,EAAI4K,EAAKhK,EAAI,GAAGd,EAAI,GAEhB,IAANc,GAASoH,EAAQa,KAAKnI,EAAGC,EAAGX,GAC5BY,IAAM8G,EAAiB,GAAGM,EAAQa,KAAKlI,EAAG2D,EAAGtE,EACnD,CAGFN,KAAKqI,SAAW,IAAItI,aAAasI,GACjCrI,KAAKsI,QAAU,IAAIc,YAAYd,GAC/BtI,KAAKuI,IAAM,IAAIxI,aAAawI,GAC5BvI,KAAKwI,QAAU,IAAIzI,aAAayI,EAClC,CAEAa,kBACE,IAAKjF,EAAGC,EAAGC,GAAKtE,KAAKyI,SAASxI,UACzBqJ,EAAIC,EAAIC,GAAMxJ,KAAK0I,SAASzI,UAC5BoG,EAAIC,EAAIC,GAAMvG,KAAKuE,MAAMtE,SAE9BD,KAAK2I,YACFnE,aAAaJ,EAAGC,EAAGC,GACnBgB,OAAOgE,EAAI,EAAG,EAAG,GACjBhE,OAAOiE,EAAI,EAAG,EAAG,GACjBjE,OAAOkE,EAAI,EAAG,EAAG,GACjBjF,MAAM8B,EAAIC,EAAIC,GAEjBvG,KAAK4I,aAAa1I,IAAIF,KAAK2I,aAAa9F,SAASL,WACnD,CAEAiH,OAAOxL,EAAIyL,GAEY,OAAjB1J,KAAKvB,UACPuB,KAAKvB,QAAUT,EAAcC,EAAI+B,KAAK5B,aAAc4B,KAAKzB,gBAEpDyB,KAAKvB,SAASO,QAAQF,MAAM,6BAInCb,EAAGhD,WAAW+E,KAAKvB,SACnB,MAAMmL,EAAQ3L,EAAG4L,mBAAmB7J,KAAKvB,QAAS,SAClDR,EAAGkM,UAAUP,EAAOQ,YAAYC,MAAQ,KAEd,OAAtBrK,KAAKiI,eAAuBjI,KAAKiI,aAAehK,EAAG3D,gBAC9B,OAArB0F,KAAKkI,cAAsBlI,KAAKkI,YAAcjK,EAAG3D,gBAC/B,OAAlB0F,KAAKmI,WAAmBnI,KAAKmI,SAAWlK,EAAG3D,gBACrB,OAAtB0F,KAAKoI,eAAuBpI,KAAKoI,aAAenK,EAAG3D,gBAEvD0F,KAAKqJ,kBACLK,EAAOC,0BAEP,MAAMlB,EAAWxK,EAAG6L,kBAAkB9J,KAAKvB,QAAS,YAC9CsL,EAAK9L,EAAG6L,kBAAkB9J,KAAKvB,QAAS,MACxCuL,EAAS/L,EAAG6L,kBAAkB9J,KAAKvB,QAAS,UAC5CkK,EAAc1K,EAAG4L,mBAAmB7J,KAAKvB,QAAS,eAClDmK,EAAe3K,EAAG4L,mBAAmB7J,KAAKvB,QAAS,gBACnDwL,EAAahM,EAAG4L,mBAAmB7J,KAAKvB,QAAS,cACjDyL,EAAmBjM,EAAG4L,mBAC1B7J,KAAKvB,QACL,oBAGFR,EAAGqM,iBAAiB3B,GAAa,EAAO3I,KAAK2I,YAAY1I,UACzDhC,EAAGqM,iBAAiB1B,GAAc,EAAO5I,KAAK4I,aAAa3I,UAC3DhC,EAAGqM,iBAAiBL,GAAY,EAAOP,EAAOO,WAAWhK,UACzDhC,EAAGqM,iBACDJ,GACA,EACAR,EAAOQ,iBAAiBjK,UAG1BhC,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKiI,cACpChK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKqI,SAAUpK,EAAGsM,cACjDtM,EAAGnH,oBAAoB2R,EAAU,EAAGxK,EAAGxD,OAAO,EAAO,EAAG,GACxDwD,EAAGuM,wBAAwB/B,GAE3BxK,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKmI,UACpClK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKuI,IAAKtK,EAAGsM,cAC5CtM,EAAGnH,oBAAoBiT,EAAI,EAAG9L,EAAGxD,OAAO,EAAO,EAAG,GAClDwD,EAAGuM,wBAAwBT,GAE3B9L,EAAGxG,WAAWwG,EAAG1D,aAAcyF,KAAKoI,cACpCnK,EAAGvG,WAAWuG,EAAG1D,aAAcyF,KAAKwI,QAASvK,EAAGsM,cAChDtM,EAAGnH,oBAAoBkT,EAAQ,EAAG/L,EAAGxD,OAAO,EAAO,EAAG,GACtDwD,EAAGuM,wBAAwBR,GAE3B/L,EAAGxG,WAAWwG,EAAG/C,qBAAsB8E,KAAKkI,aAC5CjK,EAAGvG,WAAWuG,EAAG/C,qBAAsB8E,KAAKsI,QAASrK,EAAGsM,cAExDtM,EAAGxH,aAAawH,EAAGwM,UAAWzK,KAAKsI,QAAQrS,OAAQgI,EAAGyM,eAAgB,EACxE,GDxLqB,GAAI,GAAI,IAC/BE,EAAI9B,WDJiB,4bAsBE,4iQ,IChBvByC,EAAeX,EEyCf,ITpCqB3M,EACfQ,ESmCF+M,EC/CW,WAEb,IAAI5V,EAAS6V,SAASC,eAAe,SAErC9V,EAAOwH,MAAQuO,OAAOC,WACtBhW,EAAOyH,OAASsO,OAAOE,YAGvB,MAAM5N,EAAKrI,EAAOM,WAAW,SAiB7B,OAhBK+H,GACHe,QAAQC,IAAI,iDAGdhB,EAAGR,SAAS,EAAG,EAAG7H,EAAOwH,MAAOxH,EAAOyH,QACvCY,EAAG5H,OAAO4H,EAAG1C,YACb0C,EAAGnC,WAAW,GAAK,GAAK,IAAM,GAC9BmC,EAAG1F,MAAM0F,EAAGL,iBAAmBK,EAAGJ,kBAElC8N,OAAOG,iBAAiB,UAAW3V,IACjC8H,EAAGrI,OAAOwH,MAAQuO,OAAOC,WACzB3N,EAAGrI,OAAOyH,OAASsO,OAAOE,YAE1B5N,EAAGR,SAAS,EAAG,EAAGQ,EAAGrI,OAAOwH,MAAOa,EAAGrI,OAAOyH,OAAM,IAG9CY,CACT,CDqBS,KTnCHQ,EAAUT,EADKC,ESsCJuN,EAjCK,gbAmBE,qKTjBtBvN,EAAGhD,WAAWwD,GACdR,EAAGQ,QAAUA,EAEN,IAPLO,QAAQC,IAAI,4BACL,KSmCTD,QAAQF,MAAM,0BAEhB,MAAMiN,EAAS,IElDA,MACbnM,YAAY6I,EAAW,CAAC,EAAG,EAAG,GAAIC,EAAW,CAAC,EAAG,EAAG,IAClD1I,KAAKyI,SAAW,IAAI9I,EAAQ8I,GAC5BzI,KAAK0I,SAAW,IAAI/I,EAAQ+I,GAC5B1I,KAAKiK,WAAa,IAAIvI,EACtB1B,KAAKkK,iBAAmB,IAAIxI,EAC5B1B,KAAKgM,GAAK,IAAIrM,EAAQ,CAAC,EAAG,EAAG,IAE7BK,KAAK6D,OAAS8H,OAAOC,WAAaD,OAAOE,YACzC7L,KAAKmD,KAAO,IACZnD,KAAKoD,IAAM,IACXpD,KAAKiM,IAAM,GAEXN,OAAOG,iBAAiB,UAAW3V,IACjC6J,KAAK6D,OAAS8H,OAAOC,WAAaD,OAAOE,YAEzC7L,KAAK2J,yBAAuB,IAG9B3J,KAAK2J,yBACP,CAEAA,0BACE,IAAKL,EAAIC,EAAIC,GAAMxJ,KAAK0I,SAASzI,SAEjCD,KAAKiK,WAAWzF,gBAAgBxE,KAAKyI,SAASxI,UAE9CD,KAAKiK,WAAW3E,OAAOiE,EAAI,EAAG,EAAG,GAAGjE,OAAOgE,EAAI,EAAG,EAAG,GAAGhE,OAAOkE,EAAI,EAAG,EAAG,GAEzExJ,KAAKiK,WAAWpH,SAEhB7C,KAAKkK,iBAAiBvG,eACpB3D,KAAKiM,IACLjM,KAAK6D,OACL7D,KAAKmD,KACLnD,KAAKoD,IAET,GFawB,CAAC,EAAG,IAAK,GAAI,CAAC,EAAG,EAAG,IACxC8I,EAAW,IGnDF,MACbtM,YAAY3B,EAAIyL,EAAQhB,EAAW,CAAC,EAAG,EAAG,IACxC1I,KAAKpK,OAASqI,EAAGrI,OACjBoK,KAAK0J,OAASA,EAEd1J,KAAKmM,MAAQ,IAAIxM,EACjBK,KAAK0I,SAAW,IAAI/I,EAAQ+I,GAC5B1I,KAAKoM,OAAS,IAAI1K,EAClB1B,KAAKqM,UAAW,EAEhBrM,KAAKsM,aACP,CAEAA,cACEtM,KAAKpK,OAAO2W,YAAepW,IACzB6J,KAAKqM,UAAW,EAEhB,IAAIjI,EAAIjO,EAAGqW,QAAUrW,EAAEsW,OAAO/O,YAAe,EAAM,EAC/C2G,GAAMlO,EAAEuW,QAAUvW,EAAEsW,OAAO9O,aAAgB,EAAM,EAErDqC,KAAKmM,MAAMlM,SAASC,IAAI,CAACkE,EAAGC,EAAG,GAAE,EAGnCrE,KAAKpK,OAAO+W,UAAY3M,KAAKpK,OAAOgX,aAAgBzW,IAClD6J,KAAKqM,UAAW,CAAK,EAGvBrM,KAAKpK,OAAOiX,YAAe1W,IACzB,IAAIiO,EAAIjO,EAAGqW,QAAUrW,EAAEsW,OAAO/O,YAAe,EAAM,EAC/C2G,GAAMlO,EAAEuW,QAAUvW,EAAEsW,OAAO9O,aAAgB,EAAM,EAErD,GAAIqC,KAAKqM,SAAU,CACjB,IAAIS,EAAK1I,EAAIpE,KAAKmM,MAAMlM,SAAS,GAC7B8M,EAAK1I,EAAIrE,KAAKmM,MAAMlM,SAAS,GAEjCD,KAAK0I,SAASzI,SAAS,IAAW,GAAL8M,EAC7B/M,KAAK0I,SAASzI,SAAS,IAAW,GAAL6M,EAE7B9M,KAAKmM,MAAMlM,SAASC,IAAI,CAACkE,EAAGC,EAAG,GACjC,EAEJ,CACA2I,SAGE,IAAI5I,EACF,GAAMpE,KAAK0J,OAAOhB,SAASzI,SAAS,GAAK,GAAMD,KAAK0I,SAASzI,SAAS,GAEpEoE,EACF,GAAMrE,KAAK0J,OAAOhB,SAASzI,SAAS,GAAK,GAAMD,KAAK0I,SAASzI,SAAS,GAExED,KAAK0J,OAAOhB,SAASzI,SAASC,IAAI,CAACkE,EAAGC,EAAG,GAC3C,GHD4BmH,EAAIO,IAElC,SAASkB,IACPzB,EAAGjT,MAAMiT,EAAG5N,iBAAmB4N,EAAG3N,kBAElC8M,EAAMlB,OAAO+B,EAAIO,GACjBR,EAAI9B,OAAO+B,EAAIO,GACfG,EAASc,SAETE,sBAAsBD,EACxB,CAEAA","sources":["lib/webgl-utils.js","lib/webgl-debug.js","lib/cuon-utils.js","lib/cuon-matrix-cse160.js","src/shaders/Normal.js","src/shaders/Ocean.js","src/Ocean.js","src/primitives/Plane.js","src/shaders/Sky.js","src/Sky.js","src/primitives/Sphere.js","src/index.js","src/Context.js","src/Camera.js","src/Controls.js"],"sourcesContent":["/*\r\n * Copyright 2010, Google Inc.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of Google Inc. nor the names of its\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @fileoverview This file contains functions every webgl program will need\r\n * a version of one way or another.\r\n *\r\n * Instead of setting up a context manually it is recommended to\r\n * use. This will check for success or failure. On failure it\r\n * will attempt to present an approriate message to the user.\r\n *\r\n *       gl = WebGLUtils.setupWebGL(canvas);\r\n *\r\n * For animated WebGL apps use of setTimeout or setInterval are\r\n * discouraged. It is recommended you structure your rendering\r\n * loop like this.\r\n *\r\n *       function render() {\r\n *         window.requestAnimationFrame(render, canvas);\r\n *\r\n *         // do rendering\r\n *         ...\r\n *       }\r\n *       render();\r\n *\r\n * This will call your rendering function up to the refresh rate\r\n * of your display but will stop rendering if your app is not\r\n * visible.\r\n */\r\n\r\nvar WebGLUtils = (function () {\r\n  /**\r\n   * Creates the HTLM for a failure message\r\n   * @param {string} canvasContainerId id of container of th\r\n   *        canvas.\r\n   * @return {string} The html.\r\n   */\r\n  var makeFailHTML = function (msg) {\r\n    return (\r\n      '' +\r\n      '<div style=\"margin: auto; width:500px;z-index:10000;margin-top:20em;text-align:center;\">' +\r\n      msg +\r\n      '</div>'\r\n    );\r\n    return (\r\n      '' +\r\n      '<table style=\"background-color: #8CE; width: 100%; height: 100%;\"><tr>' +\r\n      '<td align=\"center\">' +\r\n      '<div style=\"display: table-cell; vertical-align: middle;\">' +\r\n      '<div style=\"\">' +\r\n      msg +\r\n      '</div>' +\r\n      '</div>' +\r\n      '</td></tr></table>'\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Mesasge for getting a webgl browser\r\n   * @type {string}\r\n   */\r\n  var GET_A_WEBGL_BROWSER =\r\n    '' +\r\n    'This page requires a browser that supports WebGL.<br/>' +\r\n    '<a href=\"http://get.webgl.org\">Click here to upgrade your browser.</a>';\r\n\r\n  /**\r\n   * Mesasge for need better hardware\r\n   * @type {string}\r\n   */\r\n  var OTHER_PROBLEM =\r\n    '' +\r\n    \"It doesn't appear your computer can support WebGL.<br/>\" +\r\n    '<a href=\"http://get.webgl.org\">Click here for more information.</a>';\r\n\r\n  /**\r\n   * Creates a webgl context. If creation fails it will\r\n   * change the contents of the container of the <canvas>\r\n   * tag to an error message with the correct links for WebGL.\r\n   * @param {Element} canvas. The canvas element to create a\r\n   *     context from.\r\n   * @param {WebGLContextCreationAttirbutes} opt_attribs Any\r\n   *     creation attributes you want to pass in.\r\n   * @param {function:(msg)} opt_onError An function to call\r\n   *     if there is an error during creation.\r\n   * @return {WebGLRenderingContext} The created context.\r\n   */\r\n  const setupWebGL = (canvas, opt_attribs, opt_onError) => {\r\n    function handleCreationError(msg) {\r\n      var container = document.getElementsByTagName('body')[0];\r\n      //var container = canvas.parentNode;\r\n      if (container) {\r\n        var str = window.WebGLRenderingContext\r\n          ? OTHER_PROBLEM\r\n          : GET_A_WEBGL_BROWSER;\r\n        if (msg) {\r\n          str += '<br/><br/>Status: ' + msg;\r\n        }\r\n        container.innerHTML = makeFailHTML(str);\r\n      }\r\n    }\r\n\r\n    opt_onError = opt_onError || handleCreationError;\r\n\r\n    if (canvas.addEventListener) {\r\n      canvas.addEventListener(\r\n        'webglcontextcreationerror',\r\n        function (event) {\r\n          opt_onError(event.statusMessage);\r\n        },\r\n        false\r\n      );\r\n    }\r\n    var context = create3DContext(canvas, opt_attribs);\r\n    if (!context) {\r\n      if (!window.WebGLRenderingContext) {\r\n        opt_onError('');\r\n      } else {\r\n        opt_onError('');\r\n      }\r\n    }\r\n\r\n    return context;\r\n  };\r\n\r\n  /**\r\n   * Creates a webgl context.\r\n   * @param {!Canvas} canvas The canvas tag to get context\r\n   *     from. If one is not passed in one will be created.\r\n   * @return {!WebGLContext} The created context.\r\n   */\r\n  var create3DContext = function (canvas, opt_attribs) {\r\n    var names = ['webgl', 'experimental-webgl', 'webkit-3d', 'moz-webgl'];\r\n    var context = null;\r\n    for (var ii = 0; ii < names.length; ++ii) {\r\n      try {\r\n        context = canvas.getContext(names[ii], opt_attribs);\r\n      } catch (e) {}\r\n      if (context) {\r\n        break;\r\n      }\r\n    }\r\n    return context;\r\n  };\r\n\r\n  return {\r\n    create3DContext: create3DContext,\r\n    setupWebGL: setupWebGL,\r\n  };\r\n})();\r\n\r\n/**\r\n * Provides requestAnimationFrame in a cross browser\r\n * way.\r\n */\r\nconst redefineRequestAnimationFrame = () => {\r\n  if (!window.requestAnimationFrame) {\r\n    window.requestAnimationFrame = (function () {\r\n      return (\r\n        window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.oRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function (\r\n          /* function FrameRequestCallback */ callback,\r\n          /* DOMElement Element */ element\r\n        ) {\r\n          window.setTimeout(callback, 1000 / 60);\r\n        }\r\n      );\r\n    })();\r\n  }\r\n};\r\n\r\n/** * ERRATA: 'cancelRequestAnimationFrame' renamed to 'cancelAnimationFrame' to reflect an update to the W3C Animation-Timing Spec.\r\n *\r\n * Cancels an animation frame request.\r\n * Checks for cross-browser support, falls back to clearTimeout.\r\n * @param {number}  Animation frame request. */\r\nconst redefineCancelAnimationFrame = () => {\r\n  if (!window.cancelAnimationFrame) {\r\n    window.cancelAnimationFrame =\r\n      window.cancelRequestAnimationFrame ||\r\n      window.webkitCancelAnimationFrame ||\r\n      window.webkitCancelRequestAnimationFrame ||\r\n      window.mozCancelAnimationFrame ||\r\n      window.mozCancelRequestAnimationFrame ||\r\n      window.msCancelAnimationFrame ||\r\n      window.msCancelRequestAnimationFrame ||\r\n      window.oCancelAnimationFrame ||\r\n      window.oCancelRequestAnimationFrame ||\r\n      window.clearTimeout;\r\n  }\r\n};\r\n\r\nexport {\r\n  WebGLUtils,\r\n  redefineRequestAnimationFrame,\r\n  redefineCancelAnimationFrame,\r\n};\r\n","//Copyright (c) 2009 The Chromium Authors. All rights reserved.\r\n//Use of this source code is governed by a BSD-style license that can be\r\n//found in the LICENSE file.\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\nvar WebGLDebugUtils = (function () {\r\n  /**\r\n   * Wrapped logging function.\r\n   * @param {string} msg Message to log.\r\n   */\r\n  var log = function (msg) {\r\n    if (window.console && window.console.log) {\r\n      window.console.log(msg);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Which arguements are enums.\r\n   * @type {!Object.<number, string>}\r\n   */\r\n  var glValidEnumContexts = {\r\n    // Generic setters and getters\r\n\r\n    enable: { 0: true },\r\n    disable: { 0: true },\r\n    getParameter: { 0: true },\r\n\r\n    // Rendering\r\n\r\n    drawArrays: { 0: true },\r\n    drawElements: { 0: true, 2: true },\r\n\r\n    // Shaders\r\n\r\n    createShader: { 0: true },\r\n    getShaderParameter: { 1: true },\r\n    getProgramParameter: { 1: true },\r\n\r\n    // Vertex attributes\r\n\r\n    getVertexAttrib: { 1: true },\r\n    vertexAttribPointer: { 2: true },\r\n\r\n    // Textures\r\n\r\n    bindTexture: { 0: true },\r\n    activeTexture: { 0: true },\r\n    getTexParameter: { 0: true, 1: true },\r\n    texParameterf: { 0: true, 1: true },\r\n    texParameteri: { 0: true, 1: true, 2: true },\r\n    texImage2D: { 0: true, 2: true, 6: true, 7: true },\r\n    texSubImage2D: { 0: true, 6: true, 7: true },\r\n    copyTexImage2D: { 0: true, 2: true },\r\n    copyTexSubImage2D: { 0: true },\r\n    generateMipmap: { 0: true },\r\n\r\n    // Buffer objects\r\n\r\n    bindBuffer: { 0: true },\r\n    bufferData: { 0: true, 2: true },\r\n    bufferSubData: { 0: true },\r\n    getBufferParameter: { 0: true, 1: true },\r\n\r\n    // Renderbuffers and framebuffers\r\n\r\n    pixelStorei: { 0: true, 1: true },\r\n    readPixels: { 4: true, 5: true },\r\n    bindRenderbuffer: { 0: true },\r\n    bindFramebuffer: { 0: true },\r\n    checkFramebufferStatus: { 0: true },\r\n    framebufferRenderbuffer: { 0: true, 1: true, 2: true },\r\n    framebufferTexture2D: { 0: true, 1: true, 2: true },\r\n    getFramebufferAttachmentParameter: { 0: true, 1: true, 2: true },\r\n    getRenderbufferParameter: { 0: true, 1: true },\r\n    renderbufferStorage: { 0: true, 1: true },\r\n\r\n    // Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n    clear: { 0: true },\r\n    depthFunc: { 0: true },\r\n    blendFunc: { 0: true, 1: true },\r\n    blendFuncSeparate: { 0: true, 1: true, 2: true, 3: true },\r\n    blendEquation: { 0: true },\r\n    blendEquationSeparate: { 0: true, 1: true },\r\n    stencilFunc: { 0: true },\r\n    stencilFuncSeparate: { 0: true, 1: true },\r\n    stencilMaskSeparate: { 0: true },\r\n    stencilOp: { 0: true, 1: true, 2: true },\r\n    stencilOpSeparate: { 0: true, 1: true, 2: true, 3: true },\r\n\r\n    // Culling\r\n\r\n    cullFace: { 0: true },\r\n    frontFace: { 0: true },\r\n  };\r\n\r\n  /**\r\n   * Map of numbers to names.\r\n   * @type {Object}\r\n   */\r\n  var glEnums = null;\r\n\r\n  /**\r\n   * Initializes this module. Safe to call more than once.\r\n   * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n   *    you have more than one context it doesn't matter which one\r\n   *    you pass in, it is only used to pull out constants.\r\n   */\r\n  function init(ctx) {\r\n    if (glEnums == null) {\r\n      glEnums = {};\r\n      for (var propertyName in ctx) {\r\n        if (typeof ctx[propertyName] == 'number') {\r\n          glEnums[ctx[propertyName]] = propertyName;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks the utils have been initialized.\r\n   */\r\n  function checkInit() {\r\n    if (glEnums == null) {\r\n      throw 'WebGLDebugUtils.init(ctx) not called';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns true or false if value matches any WebGL enum\r\n   * @param {*} value Value to check if it might be an enum.\r\n   * @return {boolean} True if value matches one of the WebGL defined enums\r\n   */\r\n  function mightBeEnum(value) {\r\n    checkInit();\r\n    return glEnums[value] !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Gets an string version of an WebGL enum.\r\n   *\r\n   * Example:\r\n   *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n   *\r\n   * @param {number} value Value to return an enum for\r\n   * @return {string} The string version of the enum.\r\n   */\r\n  function glEnumToString(value) {\r\n    checkInit();\r\n    var name = glEnums[value];\r\n    return name !== undefined\r\n      ? name\r\n      : '*UNKNOWN WebGL ENUM (0x' + value.toString(16) + ')';\r\n  }\r\n\r\n  /**\r\n   * Returns the string version of a WebGL argument.\r\n   * Attempts to convert enum arguments to strings.\r\n   * @param {string} functionName the name of the WebGL function.\r\n   * @param {number} argumentIndx the index of the argument.\r\n   * @param {*} value The value of the argument.\r\n   * @return {string} The value as a string.\r\n   */\r\n  function glFunctionArgToString(functionName, argumentIndex, value) {\r\n    var funcInfo = glValidEnumContexts[functionName];\r\n    if (funcInfo !== undefined) {\r\n      if (funcInfo[argumentIndex]) {\r\n        return glEnumToString(value);\r\n      }\r\n    }\r\n    return value.toString();\r\n  }\r\n\r\n  /**\r\n   * Given a WebGL context returns a wrapped context that calls\r\n   * gl.getError after every command and calls a function if the\r\n   * result is not gl.NO_ERROR.\r\n   *\r\n   * @param {!WebGLRenderingContext} ctx The webgl context to\r\n   *        wrap.\r\n   * @param {!function(err, funcName, args): void} opt_onErrorFunc\r\n   *        The function to call when gl.getError returns an\r\n   *        error. If not specified the default function calls\r\n   *        console.log with a message.\r\n   */\r\n  function makeDebugContext(ctx, opt_onErrorFunc) {\r\n    init(ctx);\r\n    opt_onErrorFunc =\r\n      opt_onErrorFunc ||\r\n      function (err, functionName, args) {\r\n        // apparently we can't do args.join(\",\");\r\n        var argStr = '';\r\n        for (var ii = 0; ii < args.length; ++ii) {\r\n          argStr +=\r\n            (ii == 0 ? '' : ', ') +\r\n            glFunctionArgToString(functionName, ii, args[ii]);\r\n        }\r\n        log(\r\n          'WebGL error ' +\r\n            glEnumToString(err) +\r\n            ' in ' +\r\n            functionName +\r\n            '(' +\r\n            argStr +\r\n            ')'\r\n        );\r\n      };\r\n\r\n    // Holds booleans for each GL error so after we get the error ourselves\r\n    // we can still return it to the client app.\r\n    var glErrorShadow = {};\r\n\r\n    // Makes a function that calls a WebGL function and then calls getError.\r\n    function makeErrorWrapper(ctx, functionName) {\r\n      return function () {\r\n        var result = ctx[functionName].apply(ctx, arguments);\r\n        var err = ctx.getError();\r\n        if (err != 0) {\r\n          glErrorShadow[err] = true;\r\n          opt_onErrorFunc(err, functionName, arguments);\r\n        }\r\n        return result;\r\n      };\r\n    }\r\n\r\n    // Make a an object that has a copy of every property of the WebGL context\r\n    // but wraps all functions.\r\n    var wrapper = {};\r\n    for (var propertyName in ctx) {\r\n      if (typeof ctx[propertyName] == 'function') {\r\n        wrapper[propertyName] = makeErrorWrapper(ctx, propertyName);\r\n      } else {\r\n        wrapper[propertyName] = ctx[propertyName];\r\n      }\r\n    }\r\n\r\n    // Override the getError function with one that returns our saved results.\r\n    wrapper.getError = function () {\r\n      for (var err in glErrorShadow) {\r\n        if (glErrorShadow[err]) {\r\n          glErrorShadow[err] = false;\r\n          return err;\r\n        }\r\n      }\r\n      return ctx.NO_ERROR;\r\n    };\r\n\r\n    return wrapper;\r\n  }\r\n\r\n  function resetToInitialState(ctx) {\r\n    var numAttribs = ctx.getParameter(ctx.MAX_VERTEX_ATTRIBS);\r\n    var tmp = ctx.createBuffer();\r\n    ctx.bindBuffer(ctx.ARRAY_BUFFER, tmp);\r\n    for (var ii = 0; ii < numAttribs; ++ii) {\r\n      ctx.disableVertexAttribArray(ii);\r\n      ctx.vertexAttribPointer(ii, 4, ctx.FLOAT, false, 0, 0);\r\n      ctx.vertexAttrib1f(ii, 0);\r\n    }\r\n    ctx.deleteBuffer(tmp);\r\n\r\n    var numTextureUnits = ctx.getParameter(ctx.MAX_TEXTURE_IMAGE_UNITS);\r\n    for (var ii = 0; ii < numTextureUnits; ++ii) {\r\n      ctx.activeTexture(ctx.TEXTURE0 + ii);\r\n      ctx.bindTexture(ctx.TEXTURE_CUBE_MAP, null);\r\n      ctx.bindTexture(ctx.TEXTURE_2D, null);\r\n    }\r\n\r\n    ctx.activeTexture(ctx.TEXTURE0);\r\n    ctx.useProgram(null);\r\n    ctx.bindBuffer(ctx.ARRAY_BUFFER, null);\r\n    ctx.bindBuffer(ctx.ELEMENT_ARRAY_BUFFER, null);\r\n    ctx.bindFramebuffer(ctx.FRAMEBUFFER, null);\r\n    ctx.bindRenderbuffer(ctx.RENDERBUFFER, null);\r\n    ctx.disable(ctx.BLEND);\r\n    ctx.disable(ctx.CULL_FACE);\r\n    ctx.disable(ctx.DEPTH_TEST);\r\n    ctx.disable(ctx.DITHER);\r\n    ctx.disable(ctx.SCISSOR_TEST);\r\n    ctx.blendColor(0, 0, 0, 0);\r\n    ctx.blendEquation(ctx.FUNC_ADD);\r\n    ctx.blendFunc(ctx.ONE, ctx.ZERO);\r\n    ctx.clearColor(0, 0, 0, 0);\r\n    ctx.clearDepth(1);\r\n    ctx.clearStencil(-1);\r\n    ctx.colorMask(true, true, true, true);\r\n    ctx.cullFace(ctx.BACK);\r\n    ctx.depthFunc(ctx.LESS);\r\n    ctx.depthMask(true);\r\n    ctx.depthRange(0, 1);\r\n    ctx.frontFace(ctx.CCW);\r\n    ctx.hint(ctx.GENERATE_MIPMAP_HINT, ctx.DONT_CARE);\r\n    ctx.lineWidth(1);\r\n    ctx.pixelStorei(ctx.PACK_ALIGNMENT, 4);\r\n    ctx.pixelStorei(ctx.UNPACK_ALIGNMENT, 4);\r\n    ctx.pixelStorei(ctx.UNPACK_FLIP_Y_WEBGL, false);\r\n    ctx.pixelStorei(ctx.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n    // TODO: Delete this IF.\r\n    if (ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL) {\r\n      ctx.pixelStorei(\r\n        ctx.UNPACK_COLORSPACE_CONVERSION_WEBGL,\r\n        ctx.BROWSER_DEFAULT_WEBGL\r\n      );\r\n    }\r\n    ctx.polygonOffset(0, 0);\r\n    ctx.sampleCoverage(1, false);\r\n    ctx.scissor(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n    ctx.stencilFunc(ctx.ALWAYS, 0, 0xffffffff);\r\n    ctx.stencilMask(0xffffffff);\r\n    ctx.stencilOp(ctx.KEEP, ctx.KEEP, ctx.KEEP);\r\n    ctx.viewport(0, 0, ctx.canvas.clientWidth, ctx.canvas.clientHeight);\r\n    ctx.clear(\r\n      ctx.COLOR_BUFFER_BIT | ctx.DEPTH_BUFFER_BIT | ctx.STENCIL_BUFFER_BIT\r\n    );\r\n\r\n    // TODO: This should NOT be needed but Firefox fails with 'hint'\r\n    while (ctx.getError());\r\n  }\r\n\r\n  function makeLostContextSimulatingContext(ctx) {\r\n    var wrapper_ = {};\r\n    var contextId_ = 1;\r\n    var contextLost_ = false;\r\n    var resourceId_ = 0;\r\n    var resourceDb_ = [];\r\n    var onLost_ = undefined;\r\n    var onRestored_ = undefined;\r\n    var nextOnRestored_ = undefined;\r\n\r\n    // Holds booleans for each GL error so can simulate errors.\r\n    var glErrorShadow_ = {};\r\n\r\n    function isWebGLObject(obj) {\r\n      //return false;\r\n      return (\r\n        obj instanceof WebGLBuffer ||\r\n        obj instanceof WebGLFramebuffer ||\r\n        obj instanceof WebGLProgram ||\r\n        obj instanceof WebGLRenderbuffer ||\r\n        obj instanceof WebGLShader ||\r\n        obj instanceof WebGLTexture\r\n      );\r\n    }\r\n\r\n    function checkResources(args) {\r\n      for (var ii = 0; ii < args.length; ++ii) {\r\n        var arg = args[ii];\r\n        if (isWebGLObject(arg)) {\r\n          return arg.__webglDebugContextLostId__ == contextId_;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    function clearErrors() {\r\n      var k = Object.keys(glErrorShadow_);\r\n      for (var ii = 0; ii < k.length; ++ii) {\r\n        delete glErrorShdow_[k];\r\n      }\r\n    }\r\n\r\n    // Makes a function that simulates WebGL when out of context.\r\n    function makeLostContextWrapper(ctx, functionName) {\r\n      var f = ctx[functionName];\r\n      return function () {\r\n        // Only call the functions if the context is not lost.\r\n        if (!contextLost_) {\r\n          if (!checkResources(arguments)) {\r\n            glErrorShadow_[ctx.INVALID_OPERATION] = true;\r\n            return;\r\n          }\r\n          var result = f.apply(ctx, arguments);\r\n          return result;\r\n        }\r\n      };\r\n    }\r\n\r\n    for (var propertyName in ctx) {\r\n      if (typeof ctx[propertyName] == 'function') {\r\n        wrapper_[propertyName] = makeLostContextWrapper(ctx, propertyName);\r\n      } else {\r\n        wrapper_[propertyName] = ctx[propertyName];\r\n      }\r\n    }\r\n\r\n    function makeWebGLContextEvent(statusMessage) {\r\n      return { statusMessage: statusMessage };\r\n    }\r\n\r\n    function freeResources() {\r\n      for (var ii = 0; ii < resourceDb_.length; ++ii) {\r\n        var resource = resourceDb_[ii];\r\n        if (resource instanceof WebGLBuffer) {\r\n          ctx.deleteBuffer(resource);\r\n        } else if (resource instanceof WebctxFramebuffer) {\r\n          ctx.deleteFramebuffer(resource);\r\n        } else if (resource instanceof WebctxProgram) {\r\n          ctx.deleteProgram(resource);\r\n        } else if (resource instanceof WebctxRenderbuffer) {\r\n          ctx.deleteRenderbuffer(resource);\r\n        } else if (resource instanceof WebctxShader) {\r\n          ctx.deleteShader(resource);\r\n        } else if (resource instanceof WebctxTexture) {\r\n          ctx.deleteTexture(resource);\r\n        }\r\n      }\r\n    }\r\n\r\n    wrapper_.loseContext = function () {\r\n      if (!contextLost_) {\r\n        contextLost_ = true;\r\n        ++contextId_;\r\n        while (ctx.getError());\r\n        clearErrors();\r\n        glErrorShadow_[ctx.CONTEXT_LOST_WEBGL] = true;\r\n        setTimeout(function () {\r\n          if (onLost_) {\r\n            onLost_(makeWebGLContextEvent('context lost'));\r\n          }\r\n        }, 0);\r\n      }\r\n    };\r\n\r\n    wrapper_.restoreContext = function () {\r\n      if (contextLost_) {\r\n        if (onRestored_) {\r\n          setTimeout(function () {\r\n            freeResources();\r\n            resetToInitialState(ctx);\r\n            contextLost_ = false;\r\n            if (onRestored_) {\r\n              var callback = onRestored_;\r\n              onRestored_ = nextOnRestored_;\r\n              nextOnRestored_ = undefined;\r\n              callback(makeWebGLContextEvent('context restored'));\r\n            }\r\n          }, 0);\r\n        } else {\r\n          throw 'You can not restore the context without a listener';\r\n        }\r\n      }\r\n    };\r\n\r\n    // Wrap a few functions specially.\r\n    wrapper_.getError = function () {\r\n      if (!contextLost_) {\r\n        var err;\r\n        while ((err = ctx.getError())) {\r\n          glErrorShadow_[err] = true;\r\n        }\r\n      }\r\n      for (var err in glErrorShadow_) {\r\n        if (glErrorShadow_[err]) {\r\n          delete glErrorShadow_[err];\r\n          return err;\r\n        }\r\n      }\r\n      return ctx.NO_ERROR;\r\n    };\r\n\r\n    var creationFunctions = [\r\n      'createBuffer',\r\n      'createFramebuffer',\r\n      'createProgram',\r\n      'createRenderbuffer',\r\n      'createShader',\r\n      'createTexture',\r\n    ];\r\n    for (var ii = 0; ii < creationFunctions.length; ++ii) {\r\n      var functionName = creationFunctions[ii];\r\n      wrapper_[functionName] = (function (f) {\r\n        return function () {\r\n          if (contextLost_) {\r\n            return null;\r\n          }\r\n          var obj = f.apply(ctx, arguments);\r\n          obj.__webglDebugContextLostId__ = contextId_;\r\n          resourceDb_.push(obj);\r\n          return obj;\r\n        };\r\n      })(ctx[functionName]);\r\n    }\r\n\r\n    var functionsThatShouldReturnNull = [\r\n      'getActiveAttrib',\r\n      'getActiveUniform',\r\n      'getBufferParameter',\r\n      'getContextAttributes',\r\n      'getAttachedShaders',\r\n      'getFramebufferAttachmentParameter',\r\n      'getParameter',\r\n      'getProgramParameter',\r\n      'getProgramInfoLog',\r\n      'getRenderbufferParameter',\r\n      'getShaderParameter',\r\n      'getShaderInfoLog',\r\n      'getShaderSource',\r\n      'getTexParameter',\r\n      'getUniform',\r\n      'getUniformLocation',\r\n      'getVertexAttrib',\r\n    ];\r\n    for (var ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n      var functionName = functionsThatShouldReturnNull[ii];\r\n      wrapper_[functionName] = (function (f) {\r\n        return function () {\r\n          if (contextLost_) {\r\n            return null;\r\n          }\r\n          return f.apply(ctx, arguments);\r\n        };\r\n      })(wrapper_[functionName]);\r\n    }\r\n\r\n    var isFunctions = [\r\n      'isBuffer',\r\n      'isEnabled',\r\n      'isFramebuffer',\r\n      'isProgram',\r\n      'isRenderbuffer',\r\n      'isShader',\r\n      'isTexture',\r\n    ];\r\n    for (var ii = 0; ii < isFunctions.length; ++ii) {\r\n      var functionName = isFunctions[ii];\r\n      wrapper_[functionName] = (function (f) {\r\n        return function () {\r\n          if (contextLost_) {\r\n            return false;\r\n          }\r\n          return f.apply(ctx, arguments);\r\n        };\r\n      })(wrapper_[functionName]);\r\n    }\r\n\r\n    wrapper_.checkFramebufferStatus = (function (f) {\r\n      return function () {\r\n        if (contextLost_) {\r\n          return ctx.FRAMEBUFFER_UNSUPPORTED;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      };\r\n    })(wrapper_.checkFramebufferStatus);\r\n\r\n    wrapper_.getAttribLocation = (function (f) {\r\n      return function () {\r\n        if (contextLost_) {\r\n          return -1;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      };\r\n    })(wrapper_.getAttribLocation);\r\n\r\n    wrapper_.getVertexAttribOffset = (function (f) {\r\n      return function () {\r\n        if (contextLost_) {\r\n          return 0;\r\n        }\r\n        return f.apply(ctx, arguments);\r\n      };\r\n    })(wrapper_.getVertexAttribOffset);\r\n\r\n    wrapper_.isContextLost = function () {\r\n      return contextLost_;\r\n    };\r\n\r\n    function wrapEvent(listener) {\r\n      if (typeof listener == 'function') {\r\n        return listener;\r\n      } else {\r\n        return function (info) {\r\n          listener.handleEvent(info);\r\n        };\r\n      }\r\n    }\r\n\r\n    wrapper_.registerOnContextLostListener = function (listener) {\r\n      onLost_ = wrapEvent(listener);\r\n    };\r\n\r\n    wrapper_.registerOnContextRestoredListener = function (listener) {\r\n      if (contextLost_) {\r\n        nextOnRestored_ = wrapEvent(listener);\r\n      } else {\r\n        onRestored_ = wrapEvent(listener);\r\n      }\r\n    };\r\n\r\n    return wrapper_;\r\n  }\r\n\r\n  return {\r\n    /**\r\n     * Initializes this module. Safe to call more than once.\r\n     * @param {!WebGLRenderingContext} ctx A WebGL context. If\r\n     *    you have more than one context it doesn't matter which one\r\n     *    you pass in, it is only used to pull out constants.\r\n     */\r\n    init: init,\r\n\r\n    /**\r\n     * Returns true or false if value matches any WebGL enum\r\n     * @param {*} value Value to check if it might be an enum.\r\n     * @return {boolean} True if value matches one of the WebGL defined enums\r\n     */\r\n    mightBeEnum: mightBeEnum,\r\n\r\n    /**\r\n     * Gets an string version of an WebGL enum.\r\n     *\r\n     * Example:\r\n     *   WebGLDebugUtil.init(ctx);\r\n     *   var str = WebGLDebugUtil.glEnumToString(ctx.getError());\r\n     *\r\n     * @param {number} value Value to return an enum for\r\n     * @return {string} The string version of the enum.\r\n     */\r\n    glEnumToString: glEnumToString,\r\n\r\n    /**\r\n     * Converts the argument of a WebGL function to a string.\r\n     * Attempts to convert enum arguments to strings.\r\n     *\r\n     * Example:\r\n     *   WebGLDebugUtil.init(ctx);\r\n     *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 0, gl.TEXTURE_2D);\r\n     *\r\n     * would return 'TEXTURE_2D'\r\n     *\r\n     * @param {string} functionName the name of the WebGL function.\r\n     * @param {number} argumentIndx the index of the argument.\r\n     * @param {*} value The value of the argument.\r\n     * @return {string} The value as a string.\r\n     */\r\n    glFunctionArgToString: glFunctionArgToString,\r\n\r\n    /**\r\n     * Given a WebGL context returns a wrapped context that calls\r\n     * gl.getError after every command and calls a function if the\r\n     * result is not NO_ERROR.\r\n     *\r\n     * You can supply your own function if you want. For example, if you'd like\r\n     * an exception thrown on any GL error you could do this\r\n     *\r\n     *    function throwOnGLError(err, funcName, args) {\r\n     *      throw WebGLDebugUtils.glEnumToString(err) + \" was caused by call to\" +\r\n     *            funcName;\r\n     *    };\r\n     *\r\n     *    ctx = WebGLDebugUtils.makeDebugContext(\r\n     *        canvas.getContext(\"webgl\"), throwOnGLError);\r\n     *\r\n     * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n     * @param {!function(err, funcName, args): void} opt_onErrorFunc The function\r\n     *     to call when gl.getError returns an error. If not specified the default\r\n     *     function calls console.log with a message.\r\n     */\r\n    makeDebugContext: makeDebugContext,\r\n\r\n    /**\r\n     * Given a WebGL context returns a wrapped context that adds 4\r\n     * functions.\r\n     *\r\n     * ctx.loseContext:\r\n     *   simulates a lost context event.\r\n     *\r\n     * ctx.restoreContext:\r\n     *   simulates the context being restored.\r\n     *\r\n     * ctx.registerOnContextLostListener(listener):\r\n     *   lets you register a listener for context lost. Use instead\r\n     *   of addEventListener('webglcontextlostevent', listener);\r\n     *\r\n     * ctx.registerOnContextRestoredListener(listener):\r\n     *   lets you register a listener for context restored. Use\r\n     *   instead of addEventListener('webglcontextrestored',\r\n     *   listener);\r\n     *\r\n     * @param {!WebGLRenderingContext} ctx The webgl context to wrap.\r\n     */\r\n    makeLostContextSimulatingContext: makeLostContextSimulatingContext,\r\n\r\n    /**\r\n     * Resets a context to the initial state.\r\n     * @param {!WebGLRenderingContext} ctx The webgl context to\r\n     *     reset.\r\n     */\r\n    resetToInitialState: resetToInitialState,\r\n  };\r\n})();\r\n\r\nexport { WebGLDebugUtils };\r\n","import { WebGLUtils } from './webgl-utils';\r\nimport { WebGLDebugUtils } from './webgl-debug';\r\n\r\n// cuon-utils.js (c) 2012 kanda and matsuda\r\n/**\r\n * Create a program object and make current\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return true, if the program object was created and successfully made current\r\n */\r\nfunction initShaders(gl, vshader, fshader) {\r\n  var program = createProgram(gl, vshader, fshader);\r\n  if (!program) {\r\n    console.log('Failed to create program');\r\n    return false;\r\n  }\r\n\r\n  gl.useProgram(program);\r\n  gl.program = program;\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Create the linked program object\r\n * @param gl GL context\r\n * @param vshader a vertex shader program (string)\r\n * @param fshader a fragment shader program (string)\r\n * @return created program object, or null if the creation has failed\r\n */\r\nfunction createProgram(gl, vshader, fshader) {\r\n  // Create shader object\r\n  var vertexShader = loadShader(gl, gl.VERTEX_SHADER, vshader);\r\n  var fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fshader);\r\n  if (!vertexShader || !fragmentShader) {\r\n    return null;\r\n  }\r\n\r\n  // Create a program object\r\n  var program = gl.createProgram();\r\n  if (!program) {\r\n    return null;\r\n  }\r\n\r\n  // Attach the shader objects\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n\r\n  // Link the program object\r\n  gl.linkProgram(program);\r\n\r\n  // Check the result of linking\r\n  var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n  if (!linked) {\r\n    var error = gl.getProgramInfoLog(program);\r\n    console.log('Failed to link program: ' + error);\r\n    gl.deleteProgram(program);\r\n    gl.deleteShader(fragmentShader);\r\n    gl.deleteShader(vertexShader);\r\n    return null;\r\n  }\r\n  return program;\r\n}\r\n\r\n/**\r\n * Create a shader object\r\n * @param gl GL context\r\n * @param type the type of the shader object to be created\r\n * @param source shader program (string)\r\n * @return created shader object, or null if the creation has failed.\r\n */\r\nfunction loadShader(gl, type, source) {\r\n  // Create shader object\r\n  var shader = gl.createShader(type);\r\n  if (shader == null) {\r\n    console.log('unable to create shader');\r\n    return null;\r\n  }\r\n\r\n  // Set the shader program\r\n  gl.shaderSource(shader, source);\r\n\r\n  // Compile the shader\r\n  gl.compileShader(shader);\r\n\r\n  // Check the result of compilation\r\n  var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n  if (!compiled) {\r\n    var error = gl.getShaderInfoLog(shader);\r\n    console.log('Failed to compile shader: ' + error);\r\n    gl.deleteShader(shader);\r\n    return null;\r\n  }\r\n\r\n  return shader;\r\n}\r\n\r\n/**\r\n * Initialize and get the rendering for WebGL\r\n * @param canvas <cavnas> element\r\n * @param opt_debug flag to initialize the context for debugging\r\n * @return the rendering context for WebGL\r\n */\r\nfunction getWebGLContext(canvas, opt_debug) {\r\n  // Get the rendering context for WebGL\r\n  var gl = WebGLUtils.setupWebGL(canvas);\r\n  if (!gl) return null;\r\n\r\n  // if opt_debug is explicitly false, create the context for debugging\r\n  if (arguments.length < 2 || opt_debug) {\r\n    gl = WebGLDebugUtils.makeDebugContext(gl);\r\n  }\r\n\r\n  return gl;\r\n}\r\n\r\nexport { getWebGLContext, loadShader, createProgram, initShaders };\r\n","/* eslint-disable no-throw-literal */\n\n// cuon-matrix.js (c) 2012 kanda and matsuda\n/**\n * This is a class treating 4x4 matrix.\n * This class contains the function that is equivalent to OpenGL matrix stack.\n * The matrix after conversion is calculated by multiplying a conversion matrix from the right.\n * The matrix is replaced by the calculated result.\n */\n\nclass Vector3 {\n  constructor(opt_src) {\n    var v = new Float32Array(3);\n    if (opt_src && typeof opt_src === \"object\") {\n      v[0] = opt_src[0];\n      v[1] = opt_src[1];\n      v[2] = opt_src[2];\n    }\n    this.elements = v;\n  }\n\n  /**\n   * Copy vector.\n   * @param src source vector\n   * @return this\n   */\n  set(src) {\n    var i, s, d;\n\n    s = src.elements;\n    d = this.elements;\n\n    if (s === d) {\n      return;\n    }\n\n    for (i = 0; i < 3; ++i) {\n      d[i] = s[i];\n    }\n\n    return this;\n  }\n\n  /**\n   * Add other to this vector.\n   * @return this\n   */\n  add(other) {\n    for (var i = 0; i < 3; i++) {\n      this.elements[i] += other.elements[i];\n    }\n\n    // Don't delete the return statement.\n    return this;\n  }\n\n  /**\n   * Subtract other from this vector.\n   * @return this\n   */\n  sub(other) {\n    for (var i = 0; i < 3; i++) {\n      this.elements[i] -= other.elements[i];\n    }\n\n    // Don't delete the return statement.\n    return this;\n  }\n\n  /**\n   * Divide this vector by a scalar.\n   * @return this\n   */\n  div(scalar) {\n    for (var i = 0; i < 3; i++) {\n      this.elements[i] /= scalar;\n    }\n\n    // Don't delete the return statement.\n    return this;\n  }\n\n  /**\n   * Multiply this vector by a scalar.\n   * @return this\n   */\n  mul(scalar) {\n    for (var i = 0; i < 3; i++) {\n      this.elements[i] *= scalar;\n    }\n\n    // Don't delete the return statement.\n    return this;\n  }\n\n  /**\n   * Calcualte the dop product between this vector and other.\n   * @return scalar\n   */\n  static dot(other1, other2) {\n    let d = 0;\n\n    for (var i = 0; i < 3; i++) {\n      d += other1.elements[i] * other2.elements[i];\n    }\n\n    // Don't delete the return statement.\n    return d;\n  }\n\n  /**\n   * Calcualte the cross product between this vector and other.\n   * @return new vector\n   */\n  static cross(other1, other2) {\n    let a = other1.elements;\n    let b = other2.elements;\n\n    let i = a[1] * b[2] - a[2] * b[1];\n    let j = -1 * (a[0] * b[2] - a[2] * b[0]);\n    let k = a[0] * b[1] - a[1] * b[0];\n\n    let v3 = new Vector3([i, j, k]); // Modify this line to calculate cross product between other1 and other2.\n\n    // Don't delete the return statement.\n    return v3;\n  }\n\n  /**\n   * Calculate the magnitude (or length) of this vector.\n   * @return scalar\n   */\n  magnitude() {\n    // Insert your code here.\n    let m = 0; // Modify this line to calculate this vector's magnitude.\n\n    for (var i = 0; i < 3; i++) {\n      m += this.elements[i] * this.elements[i];\n    }\n\n    m = Math.sqrt(m);\n\n    // Don't delete the return statement.\n    return m;\n  }\n\n  /**\n   * Normalize this vector.\n   * @return this\n   */\n  normalize() {\n    this.div(this.magnitude());\n\n    // Don't delete the return statement.\n    return this;\n  }\n}\n\nclass Vector4 {\n  /**\n   * Constructor of Vector4\n   * If opt_src is specified, new vector is initialized by opt_src.\n   * @param opt_src source vector(option)\n   */\n  constructor(opt_src) {\n    var v = new Float32Array(4);\n    if (opt_src && typeof opt_src === \"object\") {\n      v[0] = opt_src[0];\n      v[1] = opt_src[1];\n      v[2] = opt_src[2];\n      v[3] = opt_src[3];\n    }\n    this.elements = v;\n  }\n}\n\nclass Matrix4 {\n  /**\n   * Constructor of Matrix4\n   * If opt_src is specified, new matrix is initialized by opt_src.\n   * Otherwise, new matrix is initialized by identity matrix.\n   * @param opt_src source matrix(option)\n   */\n  constructor(opt_src) {\n    var i, s, d;\n    if (\n      opt_src &&\n      typeof opt_src === \"object\" &&\n      opt_src.hasOwnProperty(\"elements\")\n    ) {\n      s = opt_src.elements;\n      d = new Float32Array(16);\n      for (i = 0; i < 16; ++i) {\n        d[i] = s[i];\n      }\n      this.elements = d;\n    } else {\n      this.elements = new Float32Array([\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1,\n        0,\n        0,\n        0,\n        0,\n        1\n      ]);\n    }\n  }\n\n  /**\n   * Set the identity matrix.\n   * @return this\n   */\n  setIdentity() {\n    var e = this.elements;\n    e[0] = 1;\n    e[4] = 0;\n    e[8] = 0;\n    e[12] = 0;\n    e[1] = 0;\n    e[5] = 1;\n    e[9] = 0;\n    e[13] = 0;\n    e[2] = 0;\n    e[6] = 0;\n    e[10] = 1;\n    e[14] = 0;\n    e[3] = 0;\n    e[7] = 0;\n    e[11] = 0;\n    e[15] = 1;\n    return this;\n  }\n\n  /**\n   * Copy matrix.\n   * @param src source matrix\n   * @return this\n   */\n  set(src) {\n    var i, s, d;\n\n    s = src.elements;\n    d = this.elements;\n\n    if (s === d) {\n      return;\n    }\n\n    for (i = 0; i < 16; ++i) {\n      d[i] = s[i];\n    }\n\n    return this;\n  }\n\n  /**\n   * Multiply the matrix from the right.\n   * @param other The multiply matrix\n   * @return this\n   */\n  multiply(other) {\n    var i, e, a, b, ai0, ai1, ai2, ai3;\n\n    // Calculate e = a * b\n    e = this.elements;\n    a = this.elements;\n    b = other.elements;\n\n    // If e equals b, copy b to temporary matrix.\n    if (e === b) {\n      b = new Float32Array(16);\n      for (i = 0; i < 16; ++i) {\n        b[i] = e[i];\n      }\n    }\n\n    for (i = 0; i < 4; i++) {\n      ai0 = a[i];\n      ai1 = a[i + 4];\n      ai2 = a[i + 8];\n      ai3 = a[i + 12];\n      e[i] = ai0 * b[0] + ai1 * b[1] + ai2 * b[2] + ai3 * b[3];\n      e[i + 4] = ai0 * b[4] + ai1 * b[5] + ai2 * b[6] + ai3 * b[7];\n      e[i + 8] = ai0 * b[8] + ai1 * b[9] + ai2 * b[10] + ai3 * b[11];\n      e[i + 12] = ai0 * b[12] + ai1 * b[13] + ai2 * b[14] + ai3 * b[15];\n    }\n\n    return this;\n  }\n\n  concat(other) {\n    return this.multiply(other);\n  }\n\n  /**\n   * Multiply the three-dimensional vector.\n   * @param pos  The multiply vector\n   * @return The result of multiplication(Float32Array)\n   */\n  multiplyVector3(pos) {\n    var e = this.elements;\n    var p = pos.elements;\n    var v = new Vector3();\n    var result = v.elements;\n\n    result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + e[12];\n    result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + e[13];\n    result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + e[14];\n\n    return v;\n  }\n\n  /**\n   * Multiply the four-dimensional vector.\n   * @param pos  The multiply vector\n   * @return The result of multiplication(Float32Array)\n   */\n  multiplyVector4(pos) {\n    var e = this.elements;\n    var p = pos.elements;\n    var v = new Vector4();\n    var result = v.elements;\n\n    result[0] = p[0] * e[0] + p[1] * e[4] + p[2] * e[8] + p[3] * e[12];\n    result[1] = p[0] * e[1] + p[1] * e[5] + p[2] * e[9] + p[3] * e[13];\n    result[2] = p[0] * e[2] + p[1] * e[6] + p[2] * e[10] + p[3] * e[14];\n    result[3] = p[0] * e[3] + p[1] * e[7] + p[2] * e[11] + p[3] * e[15];\n\n    return v;\n  }\n\n  /**\n   * Transpose the matrix.\n   * @return this\n   */\n  transpose() {\n    var e, t;\n\n    e = this.elements;\n\n    t = e[1];\n    e[1] = e[4];\n    e[4] = t;\n    t = e[2];\n    e[2] = e[8];\n    e[8] = t;\n    t = e[3];\n    e[3] = e[12];\n    e[12] = t;\n    t = e[6];\n    e[6] = e[9];\n    e[9] = t;\n    t = e[7];\n    e[7] = e[13];\n    e[13] = t;\n    t = e[11];\n    e[11] = e[14];\n    e[14] = t;\n\n    return this;\n  }\n\n  /**\n   * Calculate the inverse matrix of specified matrix, and set to this.\n   * @param other The source matrix\n   * @return this\n   */\n  setInverseOf(other) {\n    var i, s, d, inv, det;\n\n    s = other.elements;\n    d = this.elements;\n    inv = new Float32Array(16);\n\n    inv[0] =\n      s[5] * s[10] * s[15] -\n      s[5] * s[11] * s[14] -\n      s[9] * s[6] * s[15] +\n      s[9] * s[7] * s[14] +\n      s[13] * s[6] * s[11] -\n      s[13] * s[7] * s[10];\n    inv[4] =\n      -s[4] * s[10] * s[15] +\n      s[4] * s[11] * s[14] +\n      s[8] * s[6] * s[15] -\n      s[8] * s[7] * s[14] -\n      s[12] * s[6] * s[11] +\n      s[12] * s[7] * s[10];\n    inv[8] =\n      s[4] * s[9] * s[15] -\n      s[4] * s[11] * s[13] -\n      s[8] * s[5] * s[15] +\n      s[8] * s[7] * s[13] +\n      s[12] * s[5] * s[11] -\n      s[12] * s[7] * s[9];\n    inv[12] =\n      -s[4] * s[9] * s[14] +\n      s[4] * s[10] * s[13] +\n      s[8] * s[5] * s[14] -\n      s[8] * s[6] * s[13] -\n      s[12] * s[5] * s[10] +\n      s[12] * s[6] * s[9];\n\n    inv[1] =\n      -s[1] * s[10] * s[15] +\n      s[1] * s[11] * s[14] +\n      s[9] * s[2] * s[15] -\n      s[9] * s[3] * s[14] -\n      s[13] * s[2] * s[11] +\n      s[13] * s[3] * s[10];\n    inv[5] =\n      s[0] * s[10] * s[15] -\n      s[0] * s[11] * s[14] -\n      s[8] * s[2] * s[15] +\n      s[8] * s[3] * s[14] +\n      s[12] * s[2] * s[11] -\n      s[12] * s[3] * s[10];\n    inv[9] =\n      -s[0] * s[9] * s[15] +\n      s[0] * s[11] * s[13] +\n      s[8] * s[1] * s[15] -\n      s[8] * s[3] * s[13] -\n      s[12] * s[1] * s[11] +\n      s[12] * s[3] * s[9];\n    inv[13] =\n      s[0] * s[9] * s[14] -\n      s[0] * s[10] * s[13] -\n      s[8] * s[1] * s[14] +\n      s[8] * s[2] * s[13] +\n      s[12] * s[1] * s[10] -\n      s[12] * s[2] * s[9];\n\n    inv[2] =\n      s[1] * s[6] * s[15] -\n      s[1] * s[7] * s[14] -\n      s[5] * s[2] * s[15] +\n      s[5] * s[3] * s[14] +\n      s[13] * s[2] * s[7] -\n      s[13] * s[3] * s[6];\n    inv[6] =\n      -s[0] * s[6] * s[15] +\n      s[0] * s[7] * s[14] +\n      s[4] * s[2] * s[15] -\n      s[4] * s[3] * s[14] -\n      s[12] * s[2] * s[7] +\n      s[12] * s[3] * s[6];\n    inv[10] =\n      s[0] * s[5] * s[15] -\n      s[0] * s[7] * s[13] -\n      s[4] * s[1] * s[15] +\n      s[4] * s[3] * s[13] +\n      s[12] * s[1] * s[7] -\n      s[12] * s[3] * s[5];\n    inv[14] =\n      -s[0] * s[5] * s[14] +\n      s[0] * s[6] * s[13] +\n      s[4] * s[1] * s[14] -\n      s[4] * s[2] * s[13] -\n      s[12] * s[1] * s[6] +\n      s[12] * s[2] * s[5];\n\n    inv[3] =\n      -s[1] * s[6] * s[11] +\n      s[1] * s[7] * s[10] +\n      s[5] * s[2] * s[11] -\n      s[5] * s[3] * s[10] -\n      s[9] * s[2] * s[7] +\n      s[9] * s[3] * s[6];\n    inv[7] =\n      s[0] * s[6] * s[11] -\n      s[0] * s[7] * s[10] -\n      s[4] * s[2] * s[11] +\n      s[4] * s[3] * s[10] +\n      s[8] * s[2] * s[7] -\n      s[8] * s[3] * s[6];\n    inv[11] =\n      -s[0] * s[5] * s[11] +\n      s[0] * s[7] * s[9] +\n      s[4] * s[1] * s[11] -\n      s[4] * s[3] * s[9] -\n      s[8] * s[1] * s[7] +\n      s[8] * s[3] * s[5];\n    inv[15] =\n      s[0] * s[5] * s[10] -\n      s[0] * s[6] * s[9] -\n      s[4] * s[1] * s[10] +\n      s[4] * s[2] * s[9] +\n      s[8] * s[1] * s[6] -\n      s[8] * s[2] * s[5];\n\n    det = s[0] * inv[0] + s[1] * inv[4] + s[2] * inv[8] + s[3] * inv[12];\n    if (det === 0) {\n      return this;\n    }\n\n    det = 1 / det;\n    for (i = 0; i < 16; i++) {\n      d[i] = inv[i] * det;\n    }\n\n    return this;\n  }\n\n  /**\n   * Calculate the inverse matrix of this, and set to this.\n   * @return this\n   */\n  invert() {\n    return this.setInverseOf(this);\n  }\n\n  /**\n   * Set the orthographic projection matrix.\n   * @param left The coordinate of the left of clipping plane.\n   * @param right The coordinate of the right of clipping plane.\n   * @param bottom The coordinate of the bottom of clipping plane.\n   * @param top The coordinate of the top top clipping plane.\n   * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n   * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n   * @return this\n   */\n  setOrtho(left, right, bottom, top, near, far) {\n    var e, rw, rh, rd;\n\n    if (left === right || bottom === top || near === far) {\n      throw \"null frustum\";\n    }\n\n    rw = 1 / (right - left);\n    rh = 1 / (top - bottom);\n    rd = 1 / (far - near);\n\n    e = this.elements;\n\n    e[0] = 2 * rw;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n\n    e[4] = 0;\n    e[5] = 2 * rh;\n    e[6] = 0;\n    e[7] = 0;\n\n    e[8] = 0;\n    e[9] = 0;\n    e[10] = -2 * rd;\n    e[11] = 0;\n\n    e[12] = -(right + left) * rw;\n    e[13] = -(top + bottom) * rh;\n    e[14] = -(far + near) * rd;\n    e[15] = 1;\n\n    return this;\n  }\n\n  /**\n   * Multiply the orthographic projection matrix from the right.\n   * @param left The coordinate of the left of clipping plane.\n   * @param right The coordinate of the right of clipping plane.\n   * @param bottom The coordinate of the bottom of clipping plane.\n   * @param top The coordinate of the top top clipping plane.\n   * @param near The distances to the nearer depth clipping plane. This value is minus if the plane is to be behind the viewer.\n   * @param far The distances to the farther depth clipping plane. This value is minus if the plane is to be behind the viewer.\n   * @return this\n   */\n  ortho(left, right, bottom, top, near, far) {\n    return this.concat(\n      new Matrix4().setOrtho(left, right, bottom, top, near, far)\n    );\n  }\n\n  /**\n   * Set the perspective projection matrix.\n   * @param left The coordinate of the left of clipping plane.\n   * @param right The coordinate of the right of clipping plane.\n   * @param bottom The coordinate of the bottom of clipping plane.\n   * @param top The coordinate of the top top clipping plane.\n   * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n   * @param far The distances to the farther depth clipping plane. This value must be plus value.\n   * @return this\n   */\n  setFrustum(left, right, bottom, top, near, far) {\n    var e, rw, rh, rd;\n\n    if (left === right || top === bottom || near === far) {\n      throw \"null frustum\";\n    }\n    if (near <= 0) {\n      throw \"near <= 0\";\n    }\n    if (far <= 0) {\n      throw \"far <= 0\";\n    }\n\n    rw = 1 / (right - left);\n    rh = 1 / (top - bottom);\n    rd = 1 / (far - near);\n\n    e = this.elements;\n\n    e[0] = 2 * near * rw;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n\n    e[4] = 0;\n    e[5] = 2 * near * rh;\n    e[6] = 0;\n    e[7] = 0;\n\n    e[8] = (right + left) * rw;\n    e[9] = (top + bottom) * rh;\n    e[10] = -(far + near) * rd;\n    e[11] = -1;\n\n    e[12] = 0;\n    e[13] = 0;\n    e[14] = -2 * near * far * rd;\n    e[15] = 0;\n\n    return this;\n  }\n\n  /**\n   * Multiply the perspective projection matrix from the right.\n   * @param left The coordinate of the left of clipping plane.\n   * @param right The coordinate of the right of clipping plane.\n   * @param bottom The coordinate of the bottom of clipping plane.\n   * @param top The coordinate of the top top clipping plane.\n   * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n   * @param far The distances to the farther depth clipping plane. This value must be plus value.\n   * @return this\n   */\n  frustum(left, right, bottom, top, near, far) {\n    return this.concat(\n      new Matrix4().setFrustum(left, right, bottom, top, near, far)\n    );\n  }\n\n  /**\n   * Set the perspective projection matrix by fovy and aspect.\n   * @param fovy The angle between the upper and lower sides of the frustum.\n   * @param aspect The aspect ratio of the frustum. (width/height)\n   * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n   * @param far The distances to the farther depth clipping plane. This value must be plus value.\n   * @return this\n   */\n  setPerspective(fovy, aspect, near, far) {\n    var e, rd, s, ct;\n\n    if (near === far || aspect === 0) {\n      throw \"null frustum\";\n    }\n    if (near <= 0) {\n      throw \"near <= 0\";\n    }\n    if (far <= 0) {\n      throw \"far <= 0\";\n    }\n\n    fovy = (Math.PI * fovy) / 180 / 2;\n    s = Math.sin(fovy);\n    if (s === 0) {\n      throw \"null frustum\";\n    }\n\n    rd = 1 / (far - near);\n    ct = Math.cos(fovy) / s;\n\n    e = this.elements;\n\n    e[0] = ct / aspect;\n    e[1] = 0;\n    e[2] = 0;\n    e[3] = 0;\n\n    e[4] = 0;\n    e[5] = ct;\n    e[6] = 0;\n    e[7] = 0;\n\n    e[8] = 0;\n    e[9] = 0;\n    e[10] = -(far + near) * rd;\n    e[11] = -1;\n\n    e[12] = 0;\n    e[13] = 0;\n    e[14] = -2 * near * far * rd;\n    e[15] = 0;\n\n    return this;\n  }\n\n  /**\n   * Multiply the perspective projection matrix from the right.\n   * @param fovy The angle between the upper and lower sides of the frustum.\n   * @param aspect The aspect ratio of the frustum. (width/height)\n   * @param near The distances to the nearer depth clipping plane. This value must be plus value.\n   * @param far The distances to the farther depth clipping plane. This value must be plus value.\n   * @return this\n   */\n  perspective(fovy, aspect, near, far) {\n    return this.concat(new Matrix4().setPerspective(fovy, aspect, near, far));\n  }\n\n  /**\n   * Set the matrix for scaling.\n   * @param x The scale factor along the X axis\n   * @param y The scale factor along the Y axis\n   * @param z The scale factor along the Z axis\n   * @return this\n   */\n  setScale(x, y, z) {\n    var e = this.elements;\n    e[0] = x;\n    e[4] = 0;\n    e[8] = 0;\n    e[12] = 0;\n    e[1] = 0;\n    e[5] = y;\n    e[9] = 0;\n    e[13] = 0;\n    e[2] = 0;\n    e[6] = 0;\n    e[10] = z;\n    e[14] = 0;\n    e[3] = 0;\n    e[7] = 0;\n    e[11] = 0;\n    e[15] = 1;\n    return this;\n  }\n\n  /**\n   * Multiply the matrix for scaling from the right.\n   * @param x The scale factor along the X axis\n   * @param y The scale factor along the Y axis\n   * @param z The scale factor along the Z axis\n   * @return this\n   */\n  scale(x, y, z) {\n    var e = this.elements;\n    e[0] *= x;\n    e[4] *= y;\n    e[8] *= z;\n    e[1] *= x;\n    e[5] *= y;\n    e[9] *= z;\n    e[2] *= x;\n    e[6] *= y;\n    e[10] *= z;\n    e[3] *= x;\n    e[7] *= y;\n    e[11] *= z;\n    return this;\n  }\n\n  /**\n   * Set the matrix for translation.\n   * @param x The X value of a translation.\n   * @param y The Y value of a translation.\n   * @param z The Z value of a translation.\n   * @return this\n   */\n\n  setTranslate(x, y, z) {\n    var e = this.elements;\n    e[0] = 1;\n    e[4] = 0;\n    e[8] = 0;\n    e[12] = x;\n    e[1] = 0;\n    e[5] = 1;\n    e[9] = 0;\n    e[13] = y;\n    e[2] = 0;\n    e[6] = 0;\n    e[10] = 1;\n    e[14] = z;\n    e[3] = 0;\n    e[7] = 0;\n    e[11] = 0;\n    e[15] = 1;\n    return this;\n  }\n\n  /**\n   * Multiply the matrix for translation from the right.\n   * @param x The X value of a translation.\n   * @param y The Y value of a translation.\n   * @param z The Z value of a translation.\n   * @return this\n   */\n  translate(x, y, z) {\n    var e = this.elements;\n    e[12] += e[0] * x + e[4] * y + e[8] * z;\n    e[13] += e[1] * x + e[5] * y + e[9] * z;\n    e[14] += e[2] * x + e[6] * y + e[10] * z;\n    e[15] += e[3] * x + e[7] * y + e[11] * z;\n    return this;\n  }\n\n  /**\n   * Set the matrix for rotation.\n   * The vector of rotation axis may not be normalized.\n   * @param angle The angle of rotation (degrees)\n   * @param x The X coordinate of vector of rotation axis.\n   * @param y The Y coordinate of vector of rotation axis.\n   * @param z The Z coordinate of vector of rotation axis.\n   * @return this\n   */\n  setRotate(angle, x, y, z) {\n    var e, s, c, len, rlen, nc, xy, yz, zx, xs, ys, zs;\n\n    angle = (Math.PI * angle) / 180;\n    e = this.elements;\n\n    s = Math.sin(angle);\n    c = Math.cos(angle);\n\n    if (0 !== x && 0 === y && 0 === z) {\n      // Rotation around X axis\n      if (x < 0) {\n        s = -s;\n      }\n      e[0] = 1;\n      e[4] = 0;\n      e[8] = 0;\n      e[12] = 0;\n      e[1] = 0;\n      e[5] = c;\n      e[9] = -s;\n      e[13] = 0;\n      e[2] = 0;\n      e[6] = s;\n      e[10] = c;\n      e[14] = 0;\n      e[3] = 0;\n      e[7] = 0;\n      e[11] = 0;\n      e[15] = 1;\n    } else if (0 === x && 0 !== y && 0 === z) {\n      // Rotation around Y axis\n      if (y < 0) {\n        s = -s;\n      }\n      e[0] = c;\n      e[4] = 0;\n      e[8] = s;\n      e[12] = 0;\n      e[1] = 0;\n      e[5] = 1;\n      e[9] = 0;\n      e[13] = 0;\n      e[2] = -s;\n      e[6] = 0;\n      e[10] = c;\n      e[14] = 0;\n      e[3] = 0;\n      e[7] = 0;\n      e[11] = 0;\n      e[15] = 1;\n    } else if (0 === x && 0 === y && 0 !== z) {\n      // Rotation around Z axis\n      if (z < 0) {\n        s = -s;\n      }\n      e[0] = c;\n      e[4] = -s;\n      e[8] = 0;\n      e[12] = 0;\n      e[1] = s;\n      e[5] = c;\n      e[9] = 0;\n      e[13] = 0;\n      e[2] = 0;\n      e[6] = 0;\n      e[10] = 1;\n      e[14] = 0;\n      e[3] = 0;\n      e[7] = 0;\n      e[11] = 0;\n      e[15] = 1;\n    } else {\n      // Rotation around another axis\n      len = Math.sqrt(x * x + y * y + z * z);\n      if (len !== 1) {\n        rlen = 1 / len;\n        x *= rlen;\n        y *= rlen;\n        z *= rlen;\n      }\n      nc = 1 - c;\n      xy = x * y;\n      yz = y * z;\n      zx = z * x;\n      xs = x * s;\n      ys = y * s;\n      zs = z * s;\n\n      e[0] = x * x * nc + c;\n      e[1] = xy * nc + zs;\n      e[2] = zx * nc - ys;\n      e[3] = 0;\n\n      e[4] = xy * nc - zs;\n      e[5] = y * y * nc + c;\n      e[6] = yz * nc + xs;\n      e[7] = 0;\n\n      e[8] = zx * nc + ys;\n      e[9] = yz * nc - xs;\n      e[10] = z * z * nc + c;\n      e[11] = 0;\n\n      e[12] = 0;\n      e[13] = 0;\n      e[14] = 0;\n      e[15] = 1;\n    }\n\n    return this;\n  }\n\n  /**\n   * Multiply the matrix for rotation from the right.\n   * The vector of rotation axis may not be normalized.\n   * @param angle The angle of rotation (degrees)\n   * @param x The X coordinate of vector of rotation axis.\n   * @param y The Y coordinate of vector of rotation axis.\n   * @param z The Z coordinate of vector of rotation axis.\n   * @return this\n   */\n  rotate(angle, x, y, z) {\n    return this.concat(new Matrix4().setRotate(angle, x, y, z));\n  }\n\n  /**\n   * Set the viewing matrix.\n   * @param eyeX, eyeY, eyeZ The position of the eye point.\n   * @param centerX, centerY, centerZ The position of the reference point.\n   * @param upX, upY, upZ The direction of the up vector.\n   * @return this\n   */\n  setLookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\n    var e, fx, fy, fz, rlf, sx, sy, sz, rls, ux, uy, uz;\n\n    fx = centerX - eyeX;\n    fy = centerY - eyeY;\n    fz = centerZ - eyeZ;\n\n    // Normalize f.\n    rlf = 1 / Math.sqrt(fx * fx + fy * fy + fz * fz);\n    fx *= rlf;\n    fy *= rlf;\n    fz *= rlf;\n\n    // Calculate cross product of f and up.\n    sx = fy * upZ - fz * upY;\n    sy = fz * upX - fx * upZ;\n    sz = fx * upY - fy * upX;\n\n    // Normalize s.\n    rls = 1 / Math.sqrt(sx * sx + sy * sy + sz * sz);\n    sx *= rls;\n    sy *= rls;\n    sz *= rls;\n\n    // Calculate cross product of s and f.\n    ux = sy * fz - sz * fy;\n    uy = sz * fx - sx * fz;\n    uz = sx * fy - sy * fx;\n\n    // Set to this.\n    e = this.elements;\n    e[0] = sx;\n    e[1] = ux;\n    e[2] = -fx;\n    e[3] = 0;\n\n    e[4] = sy;\n    e[5] = uy;\n    e[6] = -fy;\n    e[7] = 0;\n\n    e[8] = sz;\n    e[9] = uz;\n    e[10] = -fz;\n    e[11] = 0;\n\n    e[12] = 0;\n    e[13] = 0;\n    e[14] = 0;\n    e[15] = 1;\n\n    // Translate.\n    return this.translate(-eyeX, -eyeY, -eyeZ);\n  }\n\n  /**\n   * Multiply the viewing matrix from the right.\n   * @param eyeX, eyeY, eyeZ The position of the eye point.\n   * @param centerX, centerY, centerZ The position of the reference point.\n   * @param upX, upY, upZ The direction of the up vector.\n   * @return this\n   */\n  lookAt(eyeX, eyeY, eyeZ, centerX, centerY, centerZ, upX, upY, upZ) {\n    return this.concat(\n      new Matrix4().setLookAt(\n        eyeX,\n        eyeY,\n        eyeZ,\n        centerX,\n        centerY,\n        centerZ,\n        upX,\n        upY,\n        upZ\n      )\n    );\n  }\n\n  /**\n   * Multiply the matrix for project vertex to plane from the right.\n   * @param plane The array[A, B, C, D] of the equation of plane \"Ax + By + Cz + D = 0\".\n   * @param light The array which stored coordinates of the light. if light[3]=0, treated as parallel light.\n   * @return this\n   */\n  dropShadow(plane, light) {\n    var mat = new Matrix4();\n    var e = mat.elements;\n\n    var dot =\n      plane[0] * light[0] +\n      plane[1] * light[1] +\n      plane[2] * light[2] +\n      plane[3] * light[3];\n\n    e[0] = dot - light[0] * plane[0];\n    e[1] = -light[1] * plane[0];\n    e[2] = -light[2] * plane[0];\n    e[3] = -light[3] * plane[0];\n\n    e[4] = -light[0] * plane[1];\n    e[5] = dot - light[1] * plane[1];\n    e[6] = -light[2] * plane[1];\n    e[7] = -light[3] * plane[1];\n\n    e[8] = -light[0] * plane[2];\n    e[9] = -light[1] * plane[2];\n    e[10] = dot - light[2] * plane[2];\n    e[11] = -light[3] * plane[2];\n\n    e[12] = -light[0] * plane[3];\n    e[13] = -light[1] * plane[3];\n    e[14] = -light[2] * plane[3];\n    e[15] = dot - light[3] * plane[3];\n\n    return this.concat(mat);\n  }\n\n  /**\n   * Multiply the matrix for project vertex to plane from the right.(Projected by parallel light.)\n   * @param normX, normY, normZ The normal vector of the plane.(Not necessary to be normalized.)\n   * @param planeX, planeY, planeZ The coordinate of arbitrary points on a plane.\n   * @param lightX, lightY, lightZ The vector of the direction of light.(Not necessary to be normalized.)\n   * @return this\n   */\n  dropShadowDirectionally(\n    normX,\n    normY,\n    normZ,\n    planeX,\n    planeY,\n    planeZ,\n    lightX,\n    lightY,\n    lightZ\n  ) {\n    var a = planeX * normX + planeY * normY + planeZ * normZ;\n    return this.dropShadow(\n      [normX, normY, normZ, -a],\n      [lightX, lightY, lightZ, 0]\n    );\n  }\n}\n\n/**\n * note this is required to use the imports in index.js\n * this is required for the type of JS we need to write in codesandbox\n */\nexport { Vector3, Vector4, Matrix4 };\n","const VertexShader = `\n  precision mediump float;\n  attribute vec3 position;\n  attribute vec2 uv;\n  attribute vec3 normal;\n\n  uniform mat4 modelMatrix;\n  uniform mat4 normalMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n\n  varying vec3 vNormal;\n\n  void main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\n    vNormal = (normalMatrix * vec4(normal, 1.0)).xyz;\n  }\n  `;\n\nconst FragmentShader = `\n  precision mediump float;\n  varying vec3 vNormal;\n\n  void main() {\n    vec3 norm = normalize(vNormal);\n    \n    gl_FragColor = vec4(norm, 1.0);\n  }\n  `;\n\nexport { VertexShader, FragmentShader };\n","const VertexShader = `\n  precision mediump float;\n  attribute vec3 position;\n  attribute vec2 uv;\n  attribute vec3 normal;\n\n  uniform mat4 modelMatrix;\n  uniform mat4 normalMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n  uniform float uTime; // ADD THIS\n\n  varying vec3 vNormal;\n  varying float vWaveHeight;\n\n  float rand(vec2 co) {\n    return fract(sin(dot(co, vec2(12.9898, 78.233))) * 43758.5453);\n  }\n\n  //\n  // GLSL textureless classic 3D noise \"cnoise\",\n  // with an RSL-style periodic variant \"pnoise\".\n  // Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n  // Version: 2011-10-11\n  //\n  // Many thanks to Ian McEwan of Ashima Arts for the\n  // ideas for permutation and gradient selection.\n  //\n  // Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n  // Distributed under the MIT license. See LICENSE file.\n  // https://github.com/ashima/webgl-noise\n  //\n\n  vec3 mod289(vec3 x)\n  {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n  }\n\n  vec4 mod289(vec4 x)\n  {\n    return x - floor(x * (1.0 / 289.0)) * 289.0;\n  }\n\n  vec4 permute(vec4 x)\n  {\n    return mod289(((x*34.0)+1.0)*x);\n  }\n\n  vec4 taylorInvSqrt(vec4 r)\n  {\n    return 1.79284291400159 - 0.85373472095314 * r;\n  }\n\n  vec3 fade(vec3 t) {\n    return t*t*t*(t*(t*6.0-15.0)+10.0);\n  }\n\n  // Classic Perlin noise\n  float cnoise(vec3 P)\n  {\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod289(Pi0);\n    Pi1 = mod289(Pi1);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 * (1.0 / 7.0);\n    vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 * (1.0 / 7.0);\n    vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n    return 2.2 * n_xyz;\n  }\n\n  void main() {\n    vec4 transformedPosition = modelMatrix * vec4(position, 1.0);\n\n    float waveIntensity = cnoise(vec3(transformedPosition.xz, uTime * 0.2));\n\n    transformedPosition.y += waveIntensity;\n\n    gl_Position = projectionMatrix * viewMatrix * transformedPosition;\n    vNormal = (normalMatrix * vec4(normal, 1.0)).xyz;\n    vWaveHeight = (waveIntensity + 2.0) * 0.25; // map waves from [-2,2] to [0,1]\n  }\n  `;\n\nconst FragmentShader = `\n  precision mediump float;\n  varying vec3 vNormal;\n  varying float vWaveHeight;\n\n  void main() {\n    vec3 norm = normalize(vNormal);\n\n    vec3 color = vec3(0.15, 0.35, 0.75); // bluish color\n\n    color = mix(color, vec3(1.0), smoothstep(0.35, 1.0, vWaveHeight));\n    \n    gl_FragColor = vec4(color, 1.0);\n  }\n  `;\n\nexport { VertexShader, FragmentShader };\n","import Plane from \"./primitives/Plane\";\nimport { VertexShader, FragmentShader } from \"./shaders/Ocean\";\n\nconst Ocean = new Plane(30, 30);\nOcean.scale.mul(100); // make it 100x100 units\nOcean.rotation.elements[0] = -90; // make it horizontal\nOcean.setShaders(VertexShader, FragmentShader);\n\nexport default Ocean;\n","import { Vector3, Matrix4 } from \"../../lib/cuon-matrix-cse160\";\nimport { createProgram } from \"../../lib/cuon-utils\";\nimport { VertexShader, FragmentShader } from \"../shaders/Normal\";\n\nexport default class Plane {\n  constructor(widthSegments = 1, heightSegments = 1) {\n    // buffers\n    this.vertexBuffer = null;\n    this.indexBuffer = null;\n    this.uvBuffer = null;\n    this.normalBuffer = null;\n\n    // shader programs\n    this.vertexShader = VertexShader;\n    this.fragmentShader = FragmentShader;\n    this.program = null;\n\n    // data arrays\n    this.vertices = null;\n    this.indices = null;\n    this.uvs = null;\n    this.normals = null;\n\n    // transformations\n    this.position = new Vector3([0, 0, 0]);\n    this.rotation = new Vector3([0, 0, 0]);\n    this.scale = new Vector3([1, 1, 1]);\n    this.modelMatrix = new Matrix4();\n    this.normalMatrix = new Matrix4();\n\n    this.generatePlane(widthSegments, heightSegments);\n  }\n\n  setShaders(vertShader, fragShader) {\n    this.vertexShader = vertShader;\n    this.fragmentShader = fragShader;\n\n    this.program = null;\n  }\n\n  generatePlane(widthSegments, heightSegments) {\n    const seg_width = 1.0 / widthSegments;\n    const seg_height = 1.0 / widthSegments;\n\n    const vertices = [];\n    const indices = [];\n    const uvs = [];\n    const normals = [];\n\n    /**\n     * generate widthSegments by heightSegments grid of vertices centered on origin\n     * generate uv's and normals along the way\n     * */\n    for (let i = 0; i < heightSegments + 1; i++) {\n      const y = i * seg_height - 0.5;\n\n      for (let j = 0; j < widthSegments + 1; j++) {\n        let x = j * seg_width - 0.5;\n\n        vertices.push(x, -y, 0);\n\n        // facing towards camera at first\n        normals.push(0, 0, 1);\n\n        uvs.push(j / widthSegments);\n        uvs.push(1 - i / heightSegments);\n      }\n\n      for (let i = 0; i < heightSegments; i++) {\n        for (let j = 0; j < widthSegments; j++) {\n          let a = j + (widthSegments + 1) * i;\n          let b = j + (widthSegments + 1) * (i + 1);\n          let c = j + 1 + (widthSegments + 1) * (i + 1);\n          let d = j + 1 + (widthSegments + 1) * i;\n\n          // this indices compose the two triangles that create the square\n          // on the grid at [i,j]\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n\n      this.vertices = new Float32Array(vertices);\n      this.indices = new Uint16Array(indices);\n      this.uvs = new Float32Array(uvs);\n      this.normals = new Float32Array(normals);\n    }\n  }\n\n  calculateMatrix() {\n    let [x, y, z] = this.position.elements;\n    let [rx, ry, rz] = this.rotation.elements;\n    let [sx, sy, sz] = this.scale.elements;\n\n    this.modelMatrix\n      .setTranslate(x, y, z)\n      .rotate(rx, 1, 0, 0)\n      .rotate(ry, 0, 1, 0)\n      .rotate(rz, 0, 0, 1)\n      .scale(sx, sy, sz);\n\n    this.normalMatrix.set(this.modelMatrix).invert().transpose();\n  }\n\n  render(gl, camera) {\n    // only render once a valid shader program is in use\n    if (this.program === null) {\n      this.program = createProgram(gl, this.vertexShader, this.fragmentShader);\n\n      if (!this.program) console.error(\"could not compile shader\");\n    }\n\n    // tell webGL to use this objects program\n    gl.useProgram(this.program);\n\n    if (this.vertexBuffer === null) this.vertexBuffer = gl.createBuffer();\n    if (this.indexBuffer === null) this.indexBuffer = gl.createBuffer();\n    if (this.uvBuffer === null) this.uvBuffer = gl.createBuffer();\n    if (this.normalBuffer === null) this.normalBuffer = gl.createBuffer();\n\n    this.calculateMatrix();\n    camera.calculateViewProjection();\n\n    const uTime = gl.getUniformLocation(this.program, \"uTime\"); // ADD THIS\n    const position = gl.getAttribLocation(this.program, \"position\");\n    const uv = gl.getAttribLocation(this.program, \"uv\");\n    const normal = gl.getAttribLocation(this.program, \"normal\");\n    const modelMatrix = gl.getUniformLocation(this.program, \"modelMatrix\");\n    const normalMatrix = gl.getUniformLocation(this.program, \"normalMatrix\");\n    const viewMatrix = gl.getUniformLocation(this.program, \"viewMatrix\");\n    const projectionMatrix = gl.getUniformLocation(\n      this.program,\n      \"projectionMatrix\"\n    );\n\n    gl.uniform1f(uTime, performance.now() / 1000); // ADD THIS\n    gl.uniformMatrix4fv(modelMatrix, false, this.modelMatrix.elements);\n    gl.uniformMatrix4fv(normalMatrix, false, this.normalMatrix.elements);\n    gl.uniformMatrix4fv(viewMatrix, false, camera.viewMatrix.elements);\n    gl.uniformMatrix4fv(\n      projectionMatrix,\n      false,\n      camera.projectionMatrix.elements\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(position, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(position);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(uv, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(uv);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.normals, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(normal, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(normal);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.DYNAMIC_DRAW);\n\n    gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);\n  }\n}\n","const VertexShader = `\n  precision mediump float;\n  attribute vec3 position;\n  attribute vec2 uv;\n  attribute vec3 normal;\n\n  uniform mat4 modelMatrix;\n  uniform mat4 normalMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n  \n  varying vec3 vPos;\n\n  void main() {\n    vec4 modelPosition = modelMatrix * vec4(position, 1.0);\n\n    gl_Position = projectionMatrix * viewMatrix * modelPosition;\n\n    vPos = modelPosition.xyz;\n  }\n`;\n\nconst FragmentShader = `\n//\n// GLSL textureless classic 4D noise \"cnoise\",\n// with an RSL-style periodic variant \"pnoise\".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-08-22\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\nprecision mediump float;\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec4 fade(vec4 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec4 P)\n{\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 * (1.0 / 7.0);\n  vec4 gy00 = floor(gx00) * (1.0 / 7.0);\n  vec4 gz00 = floor(gy00) * (1.0 / 6.0);\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 * (1.0 / 7.0);\n  vec4 gy01 = floor(gx01) * (1.0 / 7.0);\n  vec4 gz01 = floor(gy01) * (1.0 / 6.0);\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 * (1.0 / 7.0);\n  vec4 gy10 = floor(gx10) * (1.0 / 7.0);\n  vec4 gz10 = floor(gy10) * (1.0 / 6.0);\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 * (1.0 / 7.0);\n  vec4 gy11 = floor(gx11) * (1.0 / 7.0);\n  vec4 gz11 = floor(gy11) * (1.0 / 6.0);\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n\n/*\noriginal_author: Patricio Gonzalez Vivo\ndescription: Fractal Brownian Motion\nuse: fbm(<vec2> pos)\noptions:\n    FBM_OCTAVES: numbers of octaves. Default is 4.\n    FBM_NOISE_FNC(POS_UV): noise function to use Default 'snoise(POS_UV)' (simplex noise)\n    FBM_VALUE_INITIAL: initial value. Default is 0.\n    FBM_SCALE_SCALAR: scalar. Defualt is 2.\n    FBM_AMPLITUD_INITIAL: initial amplitud value. Default is 0.5\n    FBM_AMPLITUD_SCALAR: amplitud scalar. Default is 0.5\n*/\n\n#ifndef FBM_OCTAVES\n#define FBM_OCTAVES 4\n#endif\n\n#ifndef FBM_NOISE_FNC\n#define FBM_NOISE_FNC(POS_UV) cnoise(POS_UV)\n#endif\n\n#ifndef FBM_NOISE2_FNC\n#define FBM_NOISE2_FNC(POS_UV) FBM_NOISE_FNC(POS_UV)\n#endif\n\n#ifndef FBM_NOISE3_FNC\n#define FBM_NOISE3_FNC(POS_UV) FBM_NOISE_FNC(POS_UV)\n#endif\n\n\n#ifndef FBM_NOISE_TYPE\n#define FBM_NOISE_TYPE float\n#endif\n\n#ifndef FBM_VALUE_INITIAL\n#define FBM_VALUE_INITIAL 0.0\n#endif\n\n#ifndef FBM_SCALE_SCALAR\n#define FBM_SCALE_SCALAR 2.0\n#endif\n\n#ifndef FBM_AMPLITUD_INITIAL\n#define FBM_AMPLITUD_INITIAL 0.5\n#endif\n\n#ifndef FBM_AMPLITUD_SCALAR\n#define FBM_AMPLITUD_SCALAR 0.5\n#endif\n\n#ifndef FNC_FBM\n#define FNC_FBM\n\nFBM_NOISE_TYPE fbm(in vec4 pos) {\n    // Initial values\n    FBM_NOISE_TYPE value = FBM_NOISE_TYPE(FBM_VALUE_INITIAL);\n    float amplitud = FBM_AMPLITUD_INITIAL;\n\n    // Loop of octaves\n    for (int i = 0; i < FBM_OCTAVES; i++) {\n        value += amplitud * FBM_NOISE3_FNC(pos);\n        pos *= FBM_SCALE_SCALAR;\n        amplitud *= FBM_AMPLITUD_SCALAR;\n    }\n    return value;\n}\n#endif\n\n\n\n  #define SUN_POS vec3(0.0, 8.68240888, -49.24038765)\n  #define SUN_SIZE 10.0 // ADD THIS\n  varying vec3 vPos;\n  uniform float uTime;\n  void main() {\n    float d = distance(SUN_POS, vPos); // dont need the divide anymore\n    float sunIntensity = SUN_SIZE / d;\n    vec3 color = vec3(0.1, 0.12, 0.4); // pick ur sky color if u want\n    vec3 sunColor = vec3(0.95, 0.85, 0.5); // pick sun color\n    color = mix(color, sunColor, pow(sunIntensity, 2.0));\n    float mist = fbm(vec4(vPos * 0.02, uTime * 0.05));    vec3 mistColor = vec3(0.7);\n    color += mistColor * mist;\n    gl_FragColor = vec4(color, 1.0);\n  }\n`;\n\nexport { VertexShader, FragmentShader };\n","import Sphere from \"./primitives/Sphere\";\nimport { VertexShader, FragmentShader } from \"./shaders/Sky\";\n\nconst Sky = new Sphere(50, 20, 20); // radius 50, 20x20 resolution\nSky.setShaders(VertexShader, FragmentShader);\n\nexport default Sky;\n","import { Vector3, Matrix4 } from \"../../lib/cuon-matrix-cse160\";\nimport { createProgram } from \"../../lib/cuon-utils\";\nimport { VertexShader, FragmentShader } from \"../shaders/Normal\";\n\nexport default class Sphere {\n  constructor(radius = 0.5, widthSegments = 3, heightSegments = 2) {\n    // buffers\n    this.vertexBuffer = null;\n    this.indexBuffer = null;\n    this.uvBuffer = null;\n    this.normalBuffer = null;\n\n    // shader programs\n    this.vertexShader = VertexShader;\n    this.fragmentShader = FragmentShader;\n    this.program = null;\n\n    // data arrays\n    this.vertices = null;\n    this.indices = null;\n    this.uvs = null;\n    this.normals = null;\n\n    // transformations\n    this.position = new Vector3([0, 0, 0]);\n    this.rotation = new Vector3([0, 0, 0]);\n    this.scale = new Vector3([1, 1, 1]);\n    this.modelMatrix = new Matrix4();\n    this.normalMatrix = new Matrix4();\n\n    widthSegments = Math.max(3, Math.floor(widthSegments));\n    heightSegments = Math.max(2, Math.floor(heightSegments));\n\n    this.generateSphere(radius, widthSegments, heightSegments);\n  }\n\n  setShaders(vertShader, fragShader) {\n    this.vertexShader = vertShader;\n    this.fragmentShader = fragShader;\n\n    this.program = null;\n  }\n\n  generateSphere(radius, widthSegments, heightSegments) {\n    let index = 0;\n    const grid = [];\n\n    const vertex = new Vector3();\n    const normal = new Vector3();\n\n    // buffers\n\n    const indices = [];\n    const vertices = [];\n    const normals = [];\n    const uvs = [];\n\n    for (let j = 0; j <= heightSegments; j++) {\n      const row = [];\n\n      const v = j / heightSegments;\n\n      let uOffset = 0;\n      // special cases for poles\n      if (j === 0) {\n        uOffset = 0.5 / widthSegments;\n      } else if (j === heightSegments) {\n        uOffset = -0.5 / widthSegments;\n      }\n\n      for (let i = 0; i <= widthSegments; i++) {\n        const u = i / widthSegments;\n\n        vertex.elements[0] =\n          -radius * Math.cos(u * Math.PI * 2) * Math.sin(v * Math.PI);\n\n        vertex.elements[1] = radius * Math.cos(v * Math.PI);\n\n        vertex.elements[2] =\n          radius * Math.sin(u * Math.PI * 2) * Math.sin(v * Math.PI);\n\n        vertices.push(...vertex.elements);\n        normal.set(vertex).normalize();\n\n        normals.push(...normal.elements);\n\n        uvs.push(u + uOffset, 1 - v);\n\n        row.push(index++);\n      }\n\n      grid.push(row);\n    }\n\n    for (let j = 0; j < heightSegments; j++) {\n      for (let i = 0; i < widthSegments; i++) {\n        const a = grid[j][i + 1];\n        const b = grid[j][i];\n        const c = grid[j + 1][i];\n        const d = grid[j + 1][i + 1];\n\n        if (j !== 0) indices.push(a, b, d);\n        if (j !== heightSegments - 1) indices.push(b, c, d);\n      }\n    }\n\n    this.vertices = new Float32Array(vertices);\n    this.indices = new Uint16Array(indices);\n    this.uvs = new Float32Array(uvs);\n    this.normals = new Float32Array(normals);\n  }\n\n  calculateMatrix() {\n    let [x, y, z] = this.position.elements;\n    let [rx, ry, rz] = this.rotation.elements;\n    let [sx, sy, sz] = this.scale.elements;\n\n    this.modelMatrix\n      .setTranslate(x, y, z)\n      .rotate(rx, 1, 0, 0)\n      .rotate(ry, 0, 1, 0)\n      .rotate(rz, 0, 0, 1)\n      .scale(sx, sy, sz);\n\n    this.normalMatrix.set(this.modelMatrix).invert().transpose();\n  }\n\n  render(gl, camera) {\n    // only render once a valid shader program is in use\n    if (this.program === null) {\n      this.program = createProgram(gl, this.vertexShader, this.fragmentShader);\n\n      if (!this.program) console.error(\"could not compile shader\");\n    }\n\n    // tell webGL to use this objects program\n    gl.useProgram(this.program);\n    const uTime = gl.getUniformLocation(this.program, \"uTime\");\n    gl.uniform1f(uTime, performance.now() / 1000);\n\n    if (this.vertexBuffer === null) this.vertexBuffer = gl.createBuffer();\n    if (this.indexBuffer === null) this.indexBuffer = gl.createBuffer();\n    if (this.uvBuffer === null) this.uvBuffer = gl.createBuffer();\n    if (this.normalBuffer === null) this.normalBuffer = gl.createBuffer();\n\n    this.calculateMatrix();\n    camera.calculateViewProjection();\n\n    const position = gl.getAttribLocation(this.program, \"position\");\n    const uv = gl.getAttribLocation(this.program, \"uv\");\n    const normal = gl.getAttribLocation(this.program, \"normal\");\n    const modelMatrix = gl.getUniformLocation(this.program, \"modelMatrix\");\n    const normalMatrix = gl.getUniformLocation(this.program, \"normalMatrix\");\n    const viewMatrix = gl.getUniformLocation(this.program, \"viewMatrix\");\n    const projectionMatrix = gl.getUniformLocation(\n      this.program,\n      \"projectionMatrix\"\n    );\n\n    gl.uniformMatrix4fv(modelMatrix, false, this.modelMatrix.elements);\n    gl.uniformMatrix4fv(normalMatrix, false, this.normalMatrix.elements);\n    gl.uniformMatrix4fv(viewMatrix, false, camera.viewMatrix.elements);\n    gl.uniformMatrix4fv(\n      projectionMatrix,\n      false,\n      camera.projectionMatrix.elements\n    );\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.vertices, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(position, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(position);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.uvBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.uvs, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(uv, 2, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(uv);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.normalBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this.normals, gl.DYNAMIC_DRAW);\n    gl.vertexAttribPointer(normal, 3, gl.FLOAT, false, 0, 0);\n    gl.enableVertexAttribArray(normal);\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.indexBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, this.indices, gl.DYNAMIC_DRAW);\n\n    gl.drawElements(gl.TRIANGLES, this.indices.length, gl.UNSIGNED_SHORT, 0);\n  }\n}\n","/**\n * With codesandbox we import our functions from the files they live in\n * rather than import that file in the HTML file like we usually do\n *\n * ALSO NOTE that there is NO main function being called.\n * index.js IS your main function and the code written in it is run\n * on page load.\n */\nimport \"./styles.css\";\nimport { initShaders } from \"../lib/cuon-utils\";\nimport getContext from \"./Context\";\nimport Camera from \"./Camera\";\nimport Controls from \"./Controls\";\nimport Ocean from \"./Ocean\";\nimport Sky from \"./Sky\";\n\nconst VERTEX_SHADER = `\n  precision mediump float;\n  attribute vec3 position;\n  attribute vec2 uv;\n  attribute vec3 normal;\n  \n  uniform mat4 modelMatrix;\n  uniform mat4 normalMatrix;\n  uniform mat4 viewMatrix;\n  uniform mat4 projectionMatrix;\n  \n  varying vec3 vNormal;\n  \n  void main() {\n    gl_Position = projectionMatrix * viewMatrix * modelMatrix * vec4(position, 1.0);\n    vNormal = (normalMatrix * vec4(normal, 1.0)).xyz;\n  }\n  `;\n\nconst FRAGMENT_SHADER = `\n  precision mediump float;\n  varying vec3 vNormal;\n\n  void main() {\n    vec3 norm = normalize(vNormal);\n    \n    gl_FragColor = vec4(norm, 1.0);\n  }\n`;\n\n// Get the rendering context for WebGL\nvar gl = getContext();\n\nif (!initShaders(gl, VERTEX_SHADER, FRAGMENT_SHADER))\n  console.error(\"Could not init shaders\");\n\nconst camera = new Camera([0, 2.5, 5], [0, 1, 0]);\nconst controls = new Controls(gl, camera);\n\nfunction tick() {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  Ocean.render(gl, camera);\n  Sky.render(gl, camera);\n  controls.update();\n\n  requestAnimationFrame(tick);\n}\n\ntick();\n","export default function getContext() {\n  // Retrieve <canvas> element\n  var canvas = document.getElementById(\"webgl\");\n\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n\n  // Get the rendering context for WebGL\n  const gl = canvas.getContext(\"webgl\");\n  if (!gl) {\n    console.log(\"Failed to get the rendering context for WebGL\");\n  }\n\n  gl.viewport(0, 0, canvas.width, canvas.height);\n  gl.enable(gl.DEPTH_TEST);\n  gl.clearColor(0.2, 0.2, 0.25, 1.0);\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n  window.addEventListener(\"resize\", (e) => {\n    gl.canvas.width = window.innerWidth;\n    gl.canvas.height = window.innerHeight;\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n  });\n\n  return gl;\n}\n","import { Matrix4, Vector3 } from \"../lib/cuon-matrix-cse160\";\n\nexport default class Camera {\n  constructor(position = [0, 1, 2], rotation = [0, 0, 0]) {\n    this.position = new Vector3(position);\n    this.rotation = new Vector3(rotation);\n    this.viewMatrix = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.up = new Vector3([0, 1, 0]);\n\n    this.aspect = window.innerWidth / window.innerHeight;\n    this.near = 0.01;\n    this.far = 100;\n    this.fov = 50;\n\n    window.addEventListener(\"resize\", (e) => {\n      this.aspect = window.innerWidth / window.innerHeight;\n\n      this.calculateViewProjection();\n    });\n\n    this.calculateViewProjection();\n  }\n\n  calculateViewProjection() {\n    let [rx, ry, rz] = this.rotation.elements;\n\n    this.viewMatrix.setTranslate(...this.position.elements);\n\n    this.viewMatrix.rotate(ry, 0, 1, 0).rotate(rx, 1, 0, 0).rotate(rz, 0, 0, 1);\n\n    this.viewMatrix.invert();\n\n    this.projectionMatrix.setPerspective(\n      this.fov,\n      this.aspect,\n      this.near,\n      this.far\n    );\n  }\n}\n","import { Matrix4, Vector3 } from \"../lib/cuon-matrix-cse160\";\n\nexport default class Controls {\n  constructor(gl, camera, rotation = [0, 0, 0]) {\n    this.canvas = gl.canvas;\n    this.camera = camera;\n\n    this.mouse = new Vector3(); // will use as vector2\n    this.rotation = new Vector3(rotation);\n    this.matrix = new Matrix4();\n    this.dragging = false;\n\n    this.setHandlers();\n  }\n\n  setHandlers() {\n    this.canvas.onmousedown = (e) => {\n      this.dragging = true;\n\n      let x = (e.clientX / e.target.clientWidth) * 2.0 - 1.0;\n      let y = (-e.clientY / e.target.clientHeight) * 2.0 + 1.0;\n\n      this.mouse.elements.set([x, y, 0]);\n    };\n\n    this.canvas.onmouseup = this.canvas.onmouseleave = (e) => {\n      this.dragging = false;\n    };\n\n    this.canvas.onmousemove = (e) => {\n      let x = (e.clientX / e.target.clientWidth) * 2.0 - 1.0;\n      let y = (-e.clientY / e.target.clientHeight) * 2.0 + 1.0;\n\n      if (this.dragging) {\n        let dx = x - this.mouse.elements[0];\n        let dy = y - this.mouse.elements[1];\n\n        this.rotation.elements[0] -= dy * 50;\n        this.rotation.elements[1] += dx * 50;\n\n        this.mouse.elements.set([x, y, 0]);\n      }\n    };\n  }\n  update() {\n    // linearly interpolate rotation of object towards desired rotation\n    // results in smooth rotation of camera via mouse by lerping 20% each tick\n    let x =\n      0.8 * this.camera.rotation.elements[0] + 0.2 * this.rotation.elements[0];\n\n    let y =\n      0.8 * this.camera.rotation.elements[1] + 0.2 * this.rotation.elements[1];\n\n    this.camera.rotation.elements.set([x, y, 0]);\n  }\n}\n"],"names":["create3DContext","canvas","opt_attribs","names","context","ii","length","getContext","e","glValidEnumContexts","enable","disable","getParameter","drawArrays","drawElements","createShader","getShaderParameter","getProgramParameter","getVertexAttrib","vertexAttribPointer","bindTexture","activeTexture","getTexParameter","texParameterf","texParameteri","texImage2D","texSubImage2D","copyTexImage2D","copyTexSubImage2D","generateMipmap","bindBuffer","bufferData","bufferSubData","getBufferParameter","pixelStorei","readPixels","bindRenderbuffer","bindFramebuffer","checkFramebufferStatus","framebufferRenderbuffer","framebufferTexture2D","getFramebufferAttachmentParameter","getRenderbufferParameter","renderbufferStorage","clear","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","glEnums","init","ctx","propertyName","checkInit","glEnumToString","value","name","undefined","toString","glFunctionArgToString","functionName","argumentIndex","funcInfo","resetToInitialState","numAttribs","MAX_VERTEX_ATTRIBS","tmp","createBuffer","ARRAY_BUFFER","disableVertexAttribArray","FLOAT","vertexAttrib1f","deleteBuffer","numTextureUnits","MAX_TEXTURE_IMAGE_UNITS","TEXTURE0","TEXTURE_CUBE_MAP","TEXTURE_2D","useProgram","ELEMENT_ARRAY_BUFFER","FRAMEBUFFER","RENDERBUFFER","BLEND","CULL_FACE","DEPTH_TEST","DITHER","SCISSOR_TEST","blendColor","FUNC_ADD","ONE","ZERO","clearColor","clearDepth","clearStencil","colorMask","BACK","LESS","depthMask","depthRange","CCW","hint","GENERATE_MIPMAP_HINT","DONT_CARE","lineWidth","PACK_ALIGNMENT","UNPACK_ALIGNMENT","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_COLORSPACE_CONVERSION_WEBGL","BROWSER_DEFAULT_WEBGL","polygonOffset","sampleCoverage","scissor","width","height","ALWAYS","stencilMask","KEEP","viewport","clientWidth","clientHeight","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","getError","$8e61704a90a2fd6a$export$327d24a04cd0dc17","gl","vshader","fshader","vertexShader","$8e61704a90a2fd6a$export$83674196993caf59","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","LINK_STATUS","error","getProgramInfoLog","console","log","deleteProgram","deleteShader","type","source","shader","shaderSource","compileShader","COMPILE_STATUS","getShaderInfoLog","$4ebccd77b33b6381$export$64b5c384219d3699","constructor","opt_src","v","Float32Array","this","elements","set","src","i","s","d","add","other","sub","div","scalar","mul","static","other1","other2","a","b","j","k","magnitude","m","Math","sqrt","normalize","$4ebccd77b33b6381$export$fa7daccca11cdbe3","$4ebccd77b33b6381$export$2ae72fc923e5eb5","hasOwnProperty","setIdentity","multiply","ai0","ai1","ai2","ai3","concat","multiplyVector3","pos","p","result","multiplyVector4","transpose","t","setInverseOf","inv","det","invert","setOrtho","left","right","bottom","top","near","far","rw","rh","rd","ortho","setFrustum","frustum","setPerspective","fovy","aspect","ct","PI","sin","cos","perspective","setScale","x","y","z","scale","setTranslate","translate","setRotate","angle","c","len","rlen","nc","xy","yz","zx","xs","ys","zs","rotate","setLookAt","eyeX","eyeY","eyeZ","centerX","centerY","centerZ","upX","upY","upZ","fx","fy","fz","rlf","sx","sy","sz","rls","ux","uy","uz","lookAt","dropShadow","plane","light","mat","dot","dropShadowDirectionally","normX","normY","normZ","planeX","planeY","planeZ","lightX","lightY","lightZ","$73ea5a270a6cbaa7$export$cb28509c217600d2","$73ea5a270a6cbaa7$export$2d38bde43c53f87a","$7ecb391e354a58e4$var$Ocean","widthSegments","heightSegments","vertexBuffer","indexBuffer","uvBuffer","normalBuffer","vertices","indices","uvs","normals","position","rotation","modelMatrix","normalMatrix","generatePlane","setShaders","vertShader","fragShader","seg_width","seg_height","push","Uint16Array","calculateMatrix","rx","ry","rz","render","camera","calculateViewProjection","uTime","getUniformLocation","getAttribLocation","uv","normal","viewMatrix","projectionMatrix","uniform1f","performance","now","uniformMatrix4fv","DYNAMIC_DRAW","enableVertexAttribArray","TRIANGLES","UNSIGNED_SHORT","$7ecb391e354a58e4$export$2e2bcd8739ae039","$261bd514d33bade7$var$Sky","radius","max","floor","generateSphere","index","grid","vertex","row","uOffset","u","$261bd514d33bade7$export$2e2bcd8739ae039","$35da740d59af89ba$var$gl","document","getElementById","window","innerWidth","innerHeight","addEventListener","$35da740d59af89ba$var$camera","up","fov","$35da740d59af89ba$var$controls","mouse","matrix","dragging","setHandlers","onmousedown","clientX","target","clientY","onmouseup","onmouseleave","onmousemove","dx","dy","update","$35da740d59af89ba$var$tick","requestAnimationFrame"],"version":3,"file":"index.14ce8b8d.js.map"}